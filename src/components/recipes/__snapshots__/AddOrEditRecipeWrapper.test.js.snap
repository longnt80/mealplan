// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AddOrEditRecipeWrapper /> renders full DOM of AddOrEditRecipeWrapper 1`] = `
<MuiThemeProviderOld
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "hover": "rgba(0, 0, 0, 0.08)",
          "hoverOpacity": 0.08,
          "selected": "rgba(0, 0, 0, 0.14)",
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fafafa",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "danger": Object {
          "main": "#c62828",
        },
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "primary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#c67100",
          "light": "#ffd149",
          "main": "#ffa000",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#4b830d",
          "light": "#aee571",
          "main": "#7cb342",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.54)",
        },
        "tonalOffset": 0.2,
        "type": "light",
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": Object {
        "unit": 8,
      },
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body1Next": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.5,
        },
        "body2Next": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.5,
        },
        "button": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "buttonNext": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "captionNext": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "display1": Object {
          "color": "rgba(0, 0, 0, 0.54)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "lineHeight": "1.20588em",
        },
        "display2": Object {
          "color": "rgba(0, 0, 0, 0.54)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.8125rem",
          "fontWeight": 400,
          "lineHeight": "1.13333em",
          "marginLeft": "-.02em",
        },
        "display3": Object {
          "color": "rgba(0, 0, 0, 0.54)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.5rem",
          "fontWeight": 400,
          "letterSpacing": "-.02em",
          "lineHeight": "1.30357em",
          "marginLeft": "-.02em",
        },
        "display4": Object {
          "color": "rgba(0, 0, 0, 0.54)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "7rem",
          "fontWeight": 300,
          "letterSpacing": "-.04em",
          "lineHeight": "1.14286em",
          "marginLeft": "-.04em",
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "6rem",
          "fontWeight": 300,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
        },
        "h2": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.04,
        },
        "h4": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.17,
        },
        "h5": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.5rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.33,
        },
        "h6": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "headline": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.5rem",
          "fontWeight": 400,
          "lineHeight": "1.35417em",
        },
        "overline": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subheading": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "lineHeight": "1.5em",
        },
        "subtitle1": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
        "title": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.3125rem",
          "fontWeight": 500,
          "lineHeight": "1.16667em",
        },
        "useNextVariants": true,
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "tooltip": 1500,
      },
    }
  }
>
  <MemoryRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "q6fpr4",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "q6fpr4",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <AddOrEditRecipeWrapper
        history={Object {}}
        location={
          Object {
            "state": Object {
              "recipe": Object {
                "description": "You need to make something",
                "ingredients": Array [
                  Object {
                    "amount": 1,
                    "id": "adasdasdasdasdasdasd",
                    "name": "Sone ingredient",
                    "unit": "ml",
                  },
                  Object {
                    "amount": 1,
                    "id": "adasdasd12345678",
                    "name": "Some ingredient 02",
                    "unit": "kg",
                  },
                ],
                "recipeName": "A hamburger",
              },
            },
          }
        }
        match={
          Object {
            "params": Object {
              "id": "123456789",
            },
          }
        }
      >
        <WithFormik(WithStyles(MyForm))
          addIngredientField={[Function]}
          currentStatus="edit"
          deleteIngredientField={[Function]}
          deleteRecipe={[Function]}
          handleFormSubmit={[Function]}
          initialFields={
            Object {
              "description": "You need to make something",
              "ingredients": Array [
                Object {
                  "amount": 1,
                  "id": "adasdasdasdasdasdasd",
                  "name": "Sone ingredient",
                  "unit": "ml",
                },
                Object {
                  "amount": 1,
                  "id": "adasdasd12345678",
                  "name": "Some ingredient 02",
                  "unit": "kg",
                },
              ],
              "recipeName": "A hamburger",
            }
          }
        >
          <Formik
            addIngredientField={[Function]}
            currentStatus="edit"
            deleteIngredientField={[Function]}
            deleteRecipe={[Function]}
            enableReinitialize={true}
            handleFormSubmit={[Function]}
            handleSubmit={[Function]}
            initialFields={
              Object {
                "description": "You need to make something",
                "ingredients": Array [
                  Object {
                    "amount": 1,
                    "id": "adasdasdasdasdasdasd",
                    "name": "Sone ingredient",
                    "unit": "ml",
                  },
                  Object {
                    "amount": 1,
                    "id": "adasdasd12345678",
                    "name": "Some ingredient 02",
                    "unit": "kg",
                  },
                ],
                "recipeName": "A hamburger",
              }
            }
            initialValues={
              Object {
                "description": "You need to make something",
                "ingredients": Array [
                  Object {
                    "amount": 1,
                    "id": "adasdasdasdasdasdasd",
                    "name": "Sone ingredient",
                    "unit": "ml",
                  },
                  Object {
                    "amount": 1,
                    "id": "adasdasd12345678",
                    "name": "Some ingredient 02",
                    "unit": "kg",
                  },
                ],
                "recipeName": "A hamburger",
              }
            }
            isInitialValid={false}
            onSubmit={[Function]}
            render={[Function]}
            validate={[Function]}
            validateOnBlur={true}
            validateOnChange={true}
            validationSchema={[Function]}
          >
            <WithStyles(MyForm)
              addIngredientField={[Function]}
              currentStatus="edit"
              deleteIngredientField={[Function]}
              deleteRecipe={[Function]}
              dirty={false}
              errors={Object {}}
              handleBlur={[Function]}
              handleChange={[Function]}
              handleFormSubmit={[Function]}
              handleReset={[Function]}
              handleSubmit={[Function]}
              initialFields={
                Object {
                  "description": "You need to make something",
                  "ingredients": Array [
                    Object {
                      "amount": 1,
                      "id": "adasdasdasdasdasdasd",
                      "name": "Sone ingredient",
                      "unit": "ml",
                    },
                    Object {
                      "amount": 1,
                      "id": "adasdasd12345678",
                      "name": "Some ingredient 02",
                      "unit": "kg",
                    },
                  ],
                  "recipeName": "A hamburger",
                }
              }
              initialValues={
                Object {
                  "description": "You need to make something",
                  "ingredients": Array [
                    Object {
                      "amount": 1,
                      "id": "adasdasdasdasdasdasd",
                      "name": "Sone ingredient",
                      "unit": "ml",
                    },
                    Object {
                      "amount": 1,
                      "id": "adasdasd12345678",
                      "name": "Some ingredient 02",
                      "unit": "kg",
                    },
                  ],
                  "recipeName": "A hamburger",
                }
              }
              isSubmitting={false}
              isValid={false}
              isValidating={false}
              registerField={[Function]}
              resetForm={[Function]}
              setError={[Function]}
              setErrors={[Function]}
              setFieldError={[Function]}
              setFieldTouched={[Function]}
              setFieldValue={[Function]}
              setFormikState={[Function]}
              setStatus={[Function]}
              setSubmitting={[Function]}
              setTouched={[Function]}
              setValues={[Function]}
              submitCount={0}
              submitForm={[Function]}
              touched={Object {}}
              unregisterField={[Function]}
              validateField={[Function]}
              validateForm={[Function]}
              validateOnBlur={true}
              validateOnChange={true}
              values={
                Object {
                  "description": "You need to make something",
                  "ingredients": Array [
                    Object {
                      "amount": 1,
                      "id": "adasdasdasdasdasdasd",
                      "name": "Sone ingredient",
                      "unit": "ml",
                    },
                    Object {
                      "amount": 1,
                      "id": "adasdasd12345678",
                      "name": "Some ingredient 02",
                      "unit": "kg",
                    },
                  ],
                  "recipeName": "A hamburger",
                }
              }
            >
              <MyForm
                addIngredientField={[Function]}
                classes={
                  Object {
                    "button": "MyForm-button-2",
                    "buttonContainer": "MyForm-buttonContainer-3",
                    "danger": "MyForm-danger-4",
                    "paper": "MyForm-paper-1",
                  }
                }
                currentStatus="edit"
                deleteIngredientField={[Function]}
                deleteRecipe={[Function]}
                dirty={false}
                errors={Object {}}
                handleBlur={[Function]}
                handleChange={[Function]}
                handleFormSubmit={[Function]}
                handleReset={[Function]}
                handleSubmit={[Function]}
                initialFields={
                  Object {
                    "description": "You need to make something",
                    "ingredients": Array [
                      Object {
                        "amount": 1,
                        "id": "adasdasdasdasdasdasd",
                        "name": "Sone ingredient",
                        "unit": "ml",
                      },
                      Object {
                        "amount": 1,
                        "id": "adasdasd12345678",
                        "name": "Some ingredient 02",
                        "unit": "kg",
                      },
                    ],
                    "recipeName": "A hamburger",
                  }
                }
                initialValues={
                  Object {
                    "description": "You need to make something",
                    "ingredients": Array [
                      Object {
                        "amount": 1,
                        "id": "adasdasdasdasdasdasd",
                        "name": "Sone ingredient",
                        "unit": "ml",
                      },
                      Object {
                        "amount": 1,
                        "id": "adasdasd12345678",
                        "name": "Some ingredient 02",
                        "unit": "kg",
                      },
                    ],
                    "recipeName": "A hamburger",
                  }
                }
                isSubmitting={false}
                isValid={false}
                isValidating={false}
                registerField={[Function]}
                resetForm={[Function]}
                setError={[Function]}
                setErrors={[Function]}
                setFieldError={[Function]}
                setFieldTouched={[Function]}
                setFieldValue={[Function]}
                setFormikState={[Function]}
                setStatus={[Function]}
                setSubmitting={[Function]}
                setTouched={[Function]}
                setValues={[Function]}
                submitCount={0}
                submitForm={[Function]}
                touched={Object {}}
                unregisterField={[Function]}
                validateField={[Function]}
                validateForm={[Function]}
                validateOnBlur={true}
                validateOnChange={true}
                values={
                  Object {
                    "description": "You need to make something",
                    "ingredients": Array [
                      Object {
                        "amount": 1,
                        "id": "adasdasdasdasdasdasd",
                        "name": "Sone ingredient",
                        "unit": "ml",
                      },
                      Object {
                        "amount": 1,
                        "id": "adasdasd12345678",
                        "name": "Some ingredient 02",
                        "unit": "kg",
                      },
                    ],
                    "recipeName": "A hamburger",
                  }
                }
              >
                <form
                  onSubmit={[Function]}
                >
                  <WithStyles(Paper)
                    className="MyForm-paper-1"
                  >
                    <Paper
                      className="MyForm-paper-1"
                      classes={
                        Object {
                          "elevation0": "MuiPaper-elevation0-7",
                          "elevation1": "MuiPaper-elevation1-8",
                          "elevation10": "MuiPaper-elevation10-17",
                          "elevation11": "MuiPaper-elevation11-18",
                          "elevation12": "MuiPaper-elevation12-19",
                          "elevation13": "MuiPaper-elevation13-20",
                          "elevation14": "MuiPaper-elevation14-21",
                          "elevation15": "MuiPaper-elevation15-22",
                          "elevation16": "MuiPaper-elevation16-23",
                          "elevation17": "MuiPaper-elevation17-24",
                          "elevation18": "MuiPaper-elevation18-25",
                          "elevation19": "MuiPaper-elevation19-26",
                          "elevation2": "MuiPaper-elevation2-9",
                          "elevation20": "MuiPaper-elevation20-27",
                          "elevation21": "MuiPaper-elevation21-28",
                          "elevation22": "MuiPaper-elevation22-29",
                          "elevation23": "MuiPaper-elevation23-30",
                          "elevation24": "MuiPaper-elevation24-31",
                          "elevation3": "MuiPaper-elevation3-10",
                          "elevation4": "MuiPaper-elevation4-11",
                          "elevation5": "MuiPaper-elevation5-12",
                          "elevation6": "MuiPaper-elevation6-13",
                          "elevation7": "MuiPaper-elevation7-14",
                          "elevation8": "MuiPaper-elevation8-15",
                          "elevation9": "MuiPaper-elevation9-16",
                          "root": "MuiPaper-root-5",
                          "rounded": "MuiPaper-rounded-6",
                        }
                      }
                      component="div"
                      elevation={2}
                      square={false}
                    >
                      <div
                        className="MuiPaper-root-5 MuiPaper-elevation2-9 MuiPaper-rounded-6 MyForm-paper-1"
                      >
                        <WithStyles(Typography)
                          component="h2"
                          variant="h5"
                        >
                          <Typography
                            align="inherit"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter-55",
                                "alignJustify": "MuiTypography-alignJustify-57",
                                "alignLeft": "MuiTypography-alignLeft-54",
                                "alignRight": "MuiTypography-alignRight-56",
                                "body1": "MuiTypography-body1-41",
                                "body2": "MuiTypography-body2-40",
                                "button": "MuiTypography-button-43",
                                "caption": "MuiTypography-caption-42",
                                "colorError": "MuiTypography-colorError-66",
                                "colorInherit": "MuiTypography-colorInherit-61",
                                "colorPrimary": "MuiTypography-colorPrimary-62",
                                "colorSecondary": "MuiTypography-colorSecondary-63",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary-64",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary-65",
                                "display1": "MuiTypography-display1-36",
                                "display2": "MuiTypography-display2-35",
                                "display3": "MuiTypography-display3-34",
                                "display4": "MuiTypography-display4-33",
                                "gutterBottom": "MuiTypography-gutterBottom-59",
                                "h1": "MuiTypography-h1-44",
                                "h2": "MuiTypography-h2-45",
                                "h3": "MuiTypography-h3-46",
                                "h4": "MuiTypography-h4-47",
                                "h5": "MuiTypography-h5-48",
                                "h6": "MuiTypography-h6-49",
                                "headline": "MuiTypography-headline-37",
                                "inline": "MuiTypography-inline-67",
                                "noWrap": "MuiTypography-noWrap-58",
                                "overline": "MuiTypography-overline-52",
                                "paragraph": "MuiTypography-paragraph-60",
                                "root": "MuiTypography-root-32",
                                "srOnly": "MuiTypography-srOnly-53",
                                "subheading": "MuiTypography-subheading-39",
                                "subtitle1": "MuiTypography-subtitle1-50",
                                "subtitle2": "MuiTypography-subtitle2-51",
                                "title": "MuiTypography-title-38",
                              }
                            }
                            color="default"
                            component="h2"
                            gutterBottom={false}
                            headlineMapping={
                              Object {
                                "body1": "p",
                                "body2": "p",
                                "display1": "h1",
                                "display2": "h1",
                                "display3": "h1",
                                "display4": "h1",
                                "h1": "h1",
                                "h2": "h2",
                                "h3": "h3",
                                "h4": "h4",
                                "h5": "h5",
                                "h6": "h6",
                                "headline": "h1",
                                "subheading": "h3",
                                "subtitle1": "h6",
                                "subtitle2": "h6",
                                "title": "h2",
                              }
                            }
                            inline={false}
                            noWrap={false}
                            paragraph={false}
                            theme={
                              Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "hover": "rgba(0, 0, 0, 0.08)",
                                    "hoverOpacity": 0.08,
                                    "selected": "rgba(0, 0, 0, 0.14)",
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "danger": Object {
                                    "main": "#c62828",
                                  },
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                    "dark": "#c67100",
                                    "light": "#ffd149",
                                    "main": "#ffa000",
                                  },
                                  "secondary": Object {
                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                    "dark": "#4b830d",
                                    "light": "#aee571",
                                    "main": "#7cb342",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                  "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                  "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": Object {
                                  "unit": 8,
                                },
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body1Next": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2Next": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.5,
                                  },
                                  "button": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "buttonNext": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "captionNext": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "display1": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.20588em",
                                  },
                                  "display2": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.8125rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.13333em",
                                    "marginLeft": "-.02em",
                                  },
                                  "display3": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "-.02em",
                                    "lineHeight": "1.30357em",
                                    "marginLeft": "-.02em",
                                  },
                                  "display4": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "7rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-.04em",
                                    "lineHeight": "1.14286em",
                                    "marginLeft": "-.04em",
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1,
                                  },
                                  "h2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1,
                                  },
                                  "h3": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.04,
                                  },
                                  "h4": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.17,
                                  },
                                  "h5": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.33,
                                  },
                                  "h6": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "headline": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.35417em",
                                  },
                                  "overline": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subheading": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.5em",
                                  },
                                  "subtitle1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                  "title": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.3125rem",
                                    "fontWeight": 500,
                                    "lineHeight": "1.16667em",
                                  },
                                  "useNextVariants": true,
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "tooltip": 1500,
                                },
                              }
                            }
                            variant="h5"
                          >
                            <h2
                              className="MuiTypography-root-32 MuiTypography-h5-48"
                            >
                              Recipe's name:
                            </h2>
                          </Typography>
                        </WithStyles(Typography)>
                        <TextField
                          error={false}
                          label="Name"
                          name="recipeName"
                          onBlur={[Function]}
                          onChange={[Function]}
                          required={false}
                          select={false}
                          value="A hamburger"
                          variant="standard"
                        >
                          <WithStyles(FormControl)
                            error={false}
                            required={false}
                            variant="standard"
                          >
                            <FormControl
                              classes={
                                Object {
                                  "fullWidth": "MuiFormControl-fullWidth-71",
                                  "marginDense": "MuiFormControl-marginDense-70",
                                  "marginNormal": "MuiFormControl-marginNormal-69",
                                  "root": "MuiFormControl-root-68",
                                }
                              }
                              component="div"
                              disabled={false}
                              error={false}
                              fullWidth={false}
                              margin="none"
                              required={false}
                              variant="standard"
                            >
                              <div
                                className="MuiFormControl-root-68"
                              >
                                <WithStyles(WithFormControlContext(InputLabel))>
                                  <WithFormControlContext(InputLabel)
                                    classes={
                                      Object {
                                        "animated": "MuiInputLabel-animated-80",
                                        "disabled": "MuiInputLabel-disabled-74",
                                        "error": "MuiInputLabel-error-75",
                                        "filled": "MuiInputLabel-filled-81",
                                        "focused": "MuiInputLabel-focused-73",
                                        "formControl": "MuiInputLabel-formControl-77",
                                        "marginDense": "MuiInputLabel-marginDense-78",
                                        "outlined": "MuiInputLabel-outlined-82",
                                        "required": "MuiInputLabel-required-76",
                                        "root": "MuiInputLabel-root-72",
                                        "shrink": "MuiInputLabel-shrink-79",
                                      }
                                    }
                                  >
                                    <InputLabel
                                      classes={
                                        Object {
                                          "animated": "MuiInputLabel-animated-80",
                                          "disabled": "MuiInputLabel-disabled-74",
                                          "error": "MuiInputLabel-error-75",
                                          "filled": "MuiInputLabel-filled-81",
                                          "focused": "MuiInputLabel-focused-73",
                                          "formControl": "MuiInputLabel-formControl-77",
                                          "marginDense": "MuiInputLabel-marginDense-78",
                                          "outlined": "MuiInputLabel-outlined-82",
                                          "required": "MuiInputLabel-required-76",
                                          "root": "MuiInputLabel-root-72",
                                          "shrink": "MuiInputLabel-shrink-79",
                                        }
                                      }
                                      disableAnimation={false}
                                      muiFormControl={
                                        Object {
                                          "adornedStart": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": true,
                                          "focused": false,
                                          "margin": "none",
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "required": false,
                                          "variant": "standard",
                                        }
                                      }
                                    >
                                      <WithStyles(WithFormControlContext(FormLabel))
                                        className="MuiInputLabel-root-72 MuiInputLabel-formControl-77 MuiInputLabel-animated-80 MuiInputLabel-shrink-79"
                                        classes={
                                          Object {
                                            "disabled": "MuiInputLabel-disabled-74",
                                            "error": "MuiInputLabel-error-75",
                                            "focused": "MuiInputLabel-focused-73",
                                            "required": "MuiInputLabel-required-76",
                                          }
                                        }
                                        data-shrink={true}
                                      >
                                        <WithFormControlContext(FormLabel)
                                          className="MuiInputLabel-root-72 MuiInputLabel-formControl-77 MuiInputLabel-animated-80 MuiInputLabel-shrink-79"
                                          classes={
                                            Object {
                                              "asterisk": "MuiFormLabel-asterisk-89",
                                              "disabled": "MuiFormLabel-disabled-85 MuiInputLabel-disabled-74",
                                              "error": "MuiFormLabel-error-86 MuiInputLabel-error-75",
                                              "filled": "MuiFormLabel-filled-87",
                                              "focused": "MuiFormLabel-focused-84 MuiInputLabel-focused-73",
                                              "required": "MuiFormLabel-required-88 MuiInputLabel-required-76",
                                              "root": "MuiFormLabel-root-83",
                                            }
                                          }
                                          data-shrink={true}
                                        >
                                          <FormLabel
                                            className="MuiInputLabel-root-72 MuiInputLabel-formControl-77 MuiInputLabel-animated-80 MuiInputLabel-shrink-79"
                                            classes={
                                              Object {
                                                "asterisk": "MuiFormLabel-asterisk-89",
                                                "disabled": "MuiFormLabel-disabled-85 MuiInputLabel-disabled-74",
                                                "error": "MuiFormLabel-error-86 MuiInputLabel-error-75",
                                                "filled": "MuiFormLabel-filled-87",
                                                "focused": "MuiFormLabel-focused-84 MuiInputLabel-focused-73",
                                                "required": "MuiFormLabel-required-88 MuiInputLabel-required-76",
                                                "root": "MuiFormLabel-root-83",
                                              }
                                            }
                                            component="label"
                                            data-shrink={true}
                                            muiFormControl={
                                              Object {
                                                "adornedStart": false,
                                                "disabled": false,
                                                "error": false,
                                                "filled": true,
                                                "focused": false,
                                                "margin": "none",
                                                "onBlur": [Function],
                                                "onEmpty": [Function],
                                                "onFilled": [Function],
                                                "onFocus": [Function],
                                                "required": false,
                                                "variant": "standard",
                                              }
                                            }
                                          >
                                            <label
                                              className="MuiFormLabel-root-83 MuiFormLabel-filled-87 MuiInputLabel-root-72 MuiInputLabel-formControl-77 MuiInputLabel-animated-80 MuiInputLabel-shrink-79"
                                              data-shrink={true}
                                            >
                                              Name
                                            </label>
                                          </FormLabel>
                                        </WithFormControlContext(FormLabel)>
                                      </WithStyles(WithFormControlContext(FormLabel))>
                                    </InputLabel>
                                  </WithFormControlContext(InputLabel)>
                                </WithStyles(WithFormControlContext(InputLabel))>
                                <WithStyles(Input)
                                  name="recipeName"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value="A hamburger"
                                >
                                  <Input
                                    classes={
                                      Object {
                                        "disabled": "MuiInput-disabled-93",
                                        "error": "MuiInput-error-95",
                                        "focused": "MuiInput-focused-92",
                                        "formControl": "MuiInput-formControl-91",
                                        "fullWidth": "MuiInput-fullWidth-97",
                                        "input": "MuiInput-input-98",
                                        "inputMarginDense": "MuiInput-inputMarginDense-99",
                                        "inputMultiline": "MuiInput-inputMultiline-100",
                                        "inputType": "MuiInput-inputType-101",
                                        "inputTypeSearch": "MuiInput-inputTypeSearch-102",
                                        "multiline": "MuiInput-multiline-96",
                                        "root": "MuiInput-root-90",
                                        "underline": "MuiInput-underline-94",
                                      }
                                    }
                                    name="recipeName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value="A hamburger"
                                  >
                                    <WithStyles(WithFormControlContext(InputBase))
                                      classes={
                                        Object {
                                          "disabled": "MuiInput-disabled-93",
                                          "error": "MuiInput-error-95",
                                          "focused": "MuiInput-focused-92",
                                          "formControl": "MuiInput-formControl-91",
                                          "fullWidth": "MuiInput-fullWidth-97",
                                          "input": "MuiInput-input-98",
                                          "inputMarginDense": "MuiInput-inputMarginDense-99",
                                          "inputMultiline": "MuiInput-inputMultiline-100",
                                          "inputType": "MuiInput-inputType-101",
                                          "inputTypeSearch": "MuiInput-inputTypeSearch-102",
                                          "multiline": "MuiInput-multiline-96",
                                          "root": "MuiInput-root-90 MuiInput-underline-94",
                                          "underline": null,
                                        }
                                      }
                                      fullWidth={false}
                                      inputComponent="input"
                                      multiline={false}
                                      name="recipeName"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      type="text"
                                      value="A hamburger"
                                    >
                                      <WithFormControlContext(InputBase)
                                        classes={
                                          Object {
                                            "adornedEnd": "MuiInputBase-adornedEnd-108",
                                            "adornedStart": "MuiInputBase-adornedStart-107",
                                            "disabled": "MuiInputBase-disabled-106 MuiInput-disabled-93",
                                            "error": "MuiInputBase-error-109 MuiInput-error-95",
                                            "focused": "MuiInputBase-focused-105 MuiInput-focused-92",
                                            "formControl": "MuiInputBase-formControl-104 MuiInput-formControl-91",
                                            "fullWidth": "MuiInputBase-fullWidth-112 MuiInput-fullWidth-97",
                                            "input": "MuiInputBase-input-113 MuiInput-input-98",
                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-119",
                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart-118",
                                            "inputMarginDense": "MuiInputBase-inputMarginDense-114 MuiInput-inputMarginDense-99",
                                            "inputMultiline": "MuiInputBase-inputMultiline-115 MuiInput-inputMultiline-100",
                                            "inputType": "MuiInputBase-inputType-116 MuiInput-inputType-101",
                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch-117 MuiInput-inputTypeSearch-102",
                                            "marginDense": "MuiInputBase-marginDense-110",
                                            "multiline": "MuiInputBase-multiline-111 MuiInput-multiline-96",
                                            "root": "MuiInputBase-root-103 MuiInput-root-90 MuiInput-underline-94",
                                          }
                                        }
                                        fullWidth={false}
                                        inputComponent="input"
                                        multiline={false}
                                        name="recipeName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        type="text"
                                        value="A hamburger"
                                      >
                                        <InputBase
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiInputBase-adornedEnd-108",
                                              "adornedStart": "MuiInputBase-adornedStart-107",
                                              "disabled": "MuiInputBase-disabled-106 MuiInput-disabled-93",
                                              "error": "MuiInputBase-error-109 MuiInput-error-95",
                                              "focused": "MuiInputBase-focused-105 MuiInput-focused-92",
                                              "formControl": "MuiInputBase-formControl-104 MuiInput-formControl-91",
                                              "fullWidth": "MuiInputBase-fullWidth-112 MuiInput-fullWidth-97",
                                              "input": "MuiInputBase-input-113 MuiInput-input-98",
                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-119",
                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart-118",
                                              "inputMarginDense": "MuiInputBase-inputMarginDense-114 MuiInput-inputMarginDense-99",
                                              "inputMultiline": "MuiInputBase-inputMultiline-115 MuiInput-inputMultiline-100",
                                              "inputType": "MuiInputBase-inputType-116 MuiInput-inputType-101",
                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch-117 MuiInput-inputTypeSearch-102",
                                              "marginDense": "MuiInputBase-marginDense-110",
                                              "multiline": "MuiInputBase-multiline-111 MuiInput-multiline-96",
                                              "root": "MuiInputBase-root-103 MuiInput-root-90 MuiInput-underline-94",
                                            }
                                          }
                                          fullWidth={false}
                                          inputComponent="input"
                                          muiFormControl={
                                            Object {
                                              "adornedStart": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": true,
                                              "focused": false,
                                              "margin": "none",
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "required": false,
                                              "variant": "standard",
                                            }
                                          }
                                          multiline={false}
                                          name="recipeName"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          type="text"
                                          value="A hamburger"
                                        >
                                          <div
                                            className="MuiInputBase-root-103 MuiInput-root-90 MuiInput-underline-94 MuiInputBase-formControl-104 MuiInput-formControl-91"
                                            onClick={[Function]}
                                          >
                                            <input
                                              aria-invalid={false}
                                              className="MuiInputBase-input-113 MuiInput-input-98"
                                              disabled={false}
                                              name="recipeName"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              required={false}
                                              type="text"
                                              value="A hamburger"
                                            />
                                          </div>
                                        </InputBase>
                                      </WithFormControlContext(InputBase)>
                                    </WithStyles(WithFormControlContext(InputBase))>
                                  </Input>
                                </WithStyles(Input)>
                              </div>
                            </FormControl>
                          </WithStyles(FormControl)>
                        </TextField>
                      </div>
                    </Paper>
                  </WithStyles(Paper)>
                  <WithStyles(Paper)
                    className="MyForm-paper-1"
                  >
                    <Paper
                      className="MyForm-paper-1"
                      classes={
                        Object {
                          "elevation0": "MuiPaper-elevation0-7",
                          "elevation1": "MuiPaper-elevation1-8",
                          "elevation10": "MuiPaper-elevation10-17",
                          "elevation11": "MuiPaper-elevation11-18",
                          "elevation12": "MuiPaper-elevation12-19",
                          "elevation13": "MuiPaper-elevation13-20",
                          "elevation14": "MuiPaper-elevation14-21",
                          "elevation15": "MuiPaper-elevation15-22",
                          "elevation16": "MuiPaper-elevation16-23",
                          "elevation17": "MuiPaper-elevation17-24",
                          "elevation18": "MuiPaper-elevation18-25",
                          "elevation19": "MuiPaper-elevation19-26",
                          "elevation2": "MuiPaper-elevation2-9",
                          "elevation20": "MuiPaper-elevation20-27",
                          "elevation21": "MuiPaper-elevation21-28",
                          "elevation22": "MuiPaper-elevation22-29",
                          "elevation23": "MuiPaper-elevation23-30",
                          "elevation24": "MuiPaper-elevation24-31",
                          "elevation3": "MuiPaper-elevation3-10",
                          "elevation4": "MuiPaper-elevation4-11",
                          "elevation5": "MuiPaper-elevation5-12",
                          "elevation6": "MuiPaper-elevation6-13",
                          "elevation7": "MuiPaper-elevation7-14",
                          "elevation8": "MuiPaper-elevation8-15",
                          "elevation9": "MuiPaper-elevation9-16",
                          "root": "MuiPaper-root-5",
                          "rounded": "MuiPaper-rounded-6",
                        }
                      }
                      component="div"
                      elevation={2}
                      square={false}
                    >
                      <div
                        className="MuiPaper-root-5 MuiPaper-elevation2-9 MuiPaper-rounded-6 MyForm-paper-1"
                      >
                        <WithStyles(Typography)
                          component="h2"
                          variant="h5"
                        >
                          <Typography
                            align="inherit"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter-55",
                                "alignJustify": "MuiTypography-alignJustify-57",
                                "alignLeft": "MuiTypography-alignLeft-54",
                                "alignRight": "MuiTypography-alignRight-56",
                                "body1": "MuiTypography-body1-41",
                                "body2": "MuiTypography-body2-40",
                                "button": "MuiTypography-button-43",
                                "caption": "MuiTypography-caption-42",
                                "colorError": "MuiTypography-colorError-66",
                                "colorInherit": "MuiTypography-colorInherit-61",
                                "colorPrimary": "MuiTypography-colorPrimary-62",
                                "colorSecondary": "MuiTypography-colorSecondary-63",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary-64",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary-65",
                                "display1": "MuiTypography-display1-36",
                                "display2": "MuiTypography-display2-35",
                                "display3": "MuiTypography-display3-34",
                                "display4": "MuiTypography-display4-33",
                                "gutterBottom": "MuiTypography-gutterBottom-59",
                                "h1": "MuiTypography-h1-44",
                                "h2": "MuiTypography-h2-45",
                                "h3": "MuiTypography-h3-46",
                                "h4": "MuiTypography-h4-47",
                                "h5": "MuiTypography-h5-48",
                                "h6": "MuiTypography-h6-49",
                                "headline": "MuiTypography-headline-37",
                                "inline": "MuiTypography-inline-67",
                                "noWrap": "MuiTypography-noWrap-58",
                                "overline": "MuiTypography-overline-52",
                                "paragraph": "MuiTypography-paragraph-60",
                                "root": "MuiTypography-root-32",
                                "srOnly": "MuiTypography-srOnly-53",
                                "subheading": "MuiTypography-subheading-39",
                                "subtitle1": "MuiTypography-subtitle1-50",
                                "subtitle2": "MuiTypography-subtitle2-51",
                                "title": "MuiTypography-title-38",
                              }
                            }
                            color="default"
                            component="h2"
                            gutterBottom={false}
                            headlineMapping={
                              Object {
                                "body1": "p",
                                "body2": "p",
                                "display1": "h1",
                                "display2": "h1",
                                "display3": "h1",
                                "display4": "h1",
                                "h1": "h1",
                                "h2": "h2",
                                "h3": "h3",
                                "h4": "h4",
                                "h5": "h5",
                                "h6": "h6",
                                "headline": "h1",
                                "subheading": "h3",
                                "subtitle1": "h6",
                                "subtitle2": "h6",
                                "title": "h2",
                              }
                            }
                            inline={false}
                            noWrap={false}
                            paragraph={false}
                            theme={
                              Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "hover": "rgba(0, 0, 0, 0.08)",
                                    "hoverOpacity": 0.08,
                                    "selected": "rgba(0, 0, 0, 0.14)",
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "danger": Object {
                                    "main": "#c62828",
                                  },
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                    "dark": "#c67100",
                                    "light": "#ffd149",
                                    "main": "#ffa000",
                                  },
                                  "secondary": Object {
                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                    "dark": "#4b830d",
                                    "light": "#aee571",
                                    "main": "#7cb342",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                  "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                  "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": Object {
                                  "unit": 8,
                                },
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body1Next": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2Next": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.5,
                                  },
                                  "button": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "buttonNext": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "captionNext": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "display1": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.20588em",
                                  },
                                  "display2": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.8125rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.13333em",
                                    "marginLeft": "-.02em",
                                  },
                                  "display3": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "-.02em",
                                    "lineHeight": "1.30357em",
                                    "marginLeft": "-.02em",
                                  },
                                  "display4": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "7rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-.04em",
                                    "lineHeight": "1.14286em",
                                    "marginLeft": "-.04em",
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1,
                                  },
                                  "h2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1,
                                  },
                                  "h3": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.04,
                                  },
                                  "h4": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.17,
                                  },
                                  "h5": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.33,
                                  },
                                  "h6": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "headline": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.35417em",
                                  },
                                  "overline": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subheading": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.5em",
                                  },
                                  "subtitle1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                  "title": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.3125rem",
                                    "fontWeight": 500,
                                    "lineHeight": "1.16667em",
                                  },
                                  "useNextVariants": true,
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "tooltip": 1500,
                                },
                              }
                            }
                            variant="h5"
                          >
                            <h2
                              className="MuiTypography-root-32 MuiTypography-h5-48"
                            >
                              Ingredients:
                            </h2>
                          </Typography>
                        </WithStyles(Typography)>
                        <WithStyles(Grid)
                          className="ingredientField"
                          container={true}
                          justify="space-between"
                          key="adasdasdasdasdasdasd"
                          spacing={24}
                        >
                          <Grid
                            alignContent="stretch"
                            alignItems="stretch"
                            className="ingredientField"
                            classes={
                              Object {
                                "align-content-xs-center": "MuiGrid-align-content-xs-center-132",
                                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-134",
                                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-133",
                                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-136",
                                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-135",
                                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-131",
                                "align-items-xs-center": "MuiGrid-align-items-xs-center-128",
                                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-130",
                                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-129",
                                "container": "MuiGrid-container-120",
                                "direction-xs-column": "MuiGrid-direction-xs-column-123",
                                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-124",
                                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-125",
                                "grid-lg-1": "MuiGrid-grid-lg-1-191",
                                "grid-lg-10": "MuiGrid-grid-lg-10-200",
                                "grid-lg-11": "MuiGrid-grid-lg-11-201",
                                "grid-lg-12": "MuiGrid-grid-lg-12-202",
                                "grid-lg-2": "MuiGrid-grid-lg-2-192",
                                "grid-lg-3": "MuiGrid-grid-lg-3-193",
                                "grid-lg-4": "MuiGrid-grid-lg-4-194",
                                "grid-lg-5": "MuiGrid-grid-lg-5-195",
                                "grid-lg-6": "MuiGrid-grid-lg-6-196",
                                "grid-lg-7": "MuiGrid-grid-lg-7-197",
                                "grid-lg-8": "MuiGrid-grid-lg-8-198",
                                "grid-lg-9": "MuiGrid-grid-lg-9-199",
                                "grid-lg-auto": "MuiGrid-grid-lg-auto-189",
                                "grid-lg-true": "MuiGrid-grid-lg-true-190",
                                "grid-md-1": "MuiGrid-grid-md-1-177",
                                "grid-md-10": "MuiGrid-grid-md-10-186",
                                "grid-md-11": "MuiGrid-grid-md-11-187",
                                "grid-md-12": "MuiGrid-grid-md-12-188",
                                "grid-md-2": "MuiGrid-grid-md-2-178",
                                "grid-md-3": "MuiGrid-grid-md-3-179",
                                "grid-md-4": "MuiGrid-grid-md-4-180",
                                "grid-md-5": "MuiGrid-grid-md-5-181",
                                "grid-md-6": "MuiGrid-grid-md-6-182",
                                "grid-md-7": "MuiGrid-grid-md-7-183",
                                "grid-md-8": "MuiGrid-grid-md-8-184",
                                "grid-md-9": "MuiGrid-grid-md-9-185",
                                "grid-md-auto": "MuiGrid-grid-md-auto-175",
                                "grid-md-true": "MuiGrid-grid-md-true-176",
                                "grid-sm-1": "MuiGrid-grid-sm-1-163",
                                "grid-sm-10": "MuiGrid-grid-sm-10-172",
                                "grid-sm-11": "MuiGrid-grid-sm-11-173",
                                "grid-sm-12": "MuiGrid-grid-sm-12-174",
                                "grid-sm-2": "MuiGrid-grid-sm-2-164",
                                "grid-sm-3": "MuiGrid-grid-sm-3-165",
                                "grid-sm-4": "MuiGrid-grid-sm-4-166",
                                "grid-sm-5": "MuiGrid-grid-sm-5-167",
                                "grid-sm-6": "MuiGrid-grid-sm-6-168",
                                "grid-sm-7": "MuiGrid-grid-sm-7-169",
                                "grid-sm-8": "MuiGrid-grid-sm-8-170",
                                "grid-sm-9": "MuiGrid-grid-sm-9-171",
                                "grid-sm-auto": "MuiGrid-grid-sm-auto-161",
                                "grid-sm-true": "MuiGrid-grid-sm-true-162",
                                "grid-xl-1": "MuiGrid-grid-xl-1-205",
                                "grid-xl-10": "MuiGrid-grid-xl-10-214",
                                "grid-xl-11": "MuiGrid-grid-xl-11-215",
                                "grid-xl-12": "MuiGrid-grid-xl-12-216",
                                "grid-xl-2": "MuiGrid-grid-xl-2-206",
                                "grid-xl-3": "MuiGrid-grid-xl-3-207",
                                "grid-xl-4": "MuiGrid-grid-xl-4-208",
                                "grid-xl-5": "MuiGrid-grid-xl-5-209",
                                "grid-xl-6": "MuiGrid-grid-xl-6-210",
                                "grid-xl-7": "MuiGrid-grid-xl-7-211",
                                "grid-xl-8": "MuiGrid-grid-xl-8-212",
                                "grid-xl-9": "MuiGrid-grid-xl-9-213",
                                "grid-xl-auto": "MuiGrid-grid-xl-auto-203",
                                "grid-xl-true": "MuiGrid-grid-xl-true-204",
                                "grid-xs-1": "MuiGrid-grid-xs-1-149",
                                "grid-xs-10": "MuiGrid-grid-xs-10-158",
                                "grid-xs-11": "MuiGrid-grid-xs-11-159",
                                "grid-xs-12": "MuiGrid-grid-xs-12-160",
                                "grid-xs-2": "MuiGrid-grid-xs-2-150",
                                "grid-xs-3": "MuiGrid-grid-xs-3-151",
                                "grid-xs-4": "MuiGrid-grid-xs-4-152",
                                "grid-xs-5": "MuiGrid-grid-xs-5-153",
                                "grid-xs-6": "MuiGrid-grid-xs-6-154",
                                "grid-xs-7": "MuiGrid-grid-xs-7-155",
                                "grid-xs-8": "MuiGrid-grid-xs-8-156",
                                "grid-xs-9": "MuiGrid-grid-xs-9-157",
                                "grid-xs-auto": "MuiGrid-grid-xs-auto-147",
                                "grid-xs-true": "MuiGrid-grid-xs-true-148",
                                "item": "MuiGrid-item-121",
                                "justify-xs-center": "MuiGrid-justify-xs-center-137",
                                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-138",
                                "justify-xs-space-around": "MuiGrid-justify-xs-space-around-140",
                                "justify-xs-space-between": "MuiGrid-justify-xs-space-between-139",
                                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-141",
                                "spacing-xs-16": "MuiGrid-spacing-xs-16-143",
                                "spacing-xs-24": "MuiGrid-spacing-xs-24-144",
                                "spacing-xs-32": "MuiGrid-spacing-xs-32-145",
                                "spacing-xs-40": "MuiGrid-spacing-xs-40-146",
                                "spacing-xs-8": "MuiGrid-spacing-xs-8-142",
                                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-126",
                                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-127",
                                "zeroMinWidth": "MuiGrid-zeroMinWidth-122",
                              }
                            }
                            component="div"
                            container={true}
                            direction="row"
                            item={false}
                            justify="space-between"
                            lg={false}
                            md={false}
                            sm={false}
                            spacing={24}
                            wrap="wrap"
                            xl={false}
                            xs={false}
                            zeroMinWidth={false}
                          >
                            <div
                              className="MuiGrid-container-120 MuiGrid-spacing-xs-24-144 MuiGrid-justify-xs-space-between-139 ingredientField"
                            >
                              <WithStyles(Grid)
                                item={true}
                                sm={6}
                                xs={12}
                              >
                                <Grid
                                  alignContent="stretch"
                                  alignItems="stretch"
                                  classes={
                                    Object {
                                      "align-content-xs-center": "MuiGrid-align-content-xs-center-132",
                                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-134",
                                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-133",
                                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-136",
                                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-135",
                                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-131",
                                      "align-items-xs-center": "MuiGrid-align-items-xs-center-128",
                                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-130",
                                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-129",
                                      "container": "MuiGrid-container-120",
                                      "direction-xs-column": "MuiGrid-direction-xs-column-123",
                                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-124",
                                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-125",
                                      "grid-lg-1": "MuiGrid-grid-lg-1-191",
                                      "grid-lg-10": "MuiGrid-grid-lg-10-200",
                                      "grid-lg-11": "MuiGrid-grid-lg-11-201",
                                      "grid-lg-12": "MuiGrid-grid-lg-12-202",
                                      "grid-lg-2": "MuiGrid-grid-lg-2-192",
                                      "grid-lg-3": "MuiGrid-grid-lg-3-193",
                                      "grid-lg-4": "MuiGrid-grid-lg-4-194",
                                      "grid-lg-5": "MuiGrid-grid-lg-5-195",
                                      "grid-lg-6": "MuiGrid-grid-lg-6-196",
                                      "grid-lg-7": "MuiGrid-grid-lg-7-197",
                                      "grid-lg-8": "MuiGrid-grid-lg-8-198",
                                      "grid-lg-9": "MuiGrid-grid-lg-9-199",
                                      "grid-lg-auto": "MuiGrid-grid-lg-auto-189",
                                      "grid-lg-true": "MuiGrid-grid-lg-true-190",
                                      "grid-md-1": "MuiGrid-grid-md-1-177",
                                      "grid-md-10": "MuiGrid-grid-md-10-186",
                                      "grid-md-11": "MuiGrid-grid-md-11-187",
                                      "grid-md-12": "MuiGrid-grid-md-12-188",
                                      "grid-md-2": "MuiGrid-grid-md-2-178",
                                      "grid-md-3": "MuiGrid-grid-md-3-179",
                                      "grid-md-4": "MuiGrid-grid-md-4-180",
                                      "grid-md-5": "MuiGrid-grid-md-5-181",
                                      "grid-md-6": "MuiGrid-grid-md-6-182",
                                      "grid-md-7": "MuiGrid-grid-md-7-183",
                                      "grid-md-8": "MuiGrid-grid-md-8-184",
                                      "grid-md-9": "MuiGrid-grid-md-9-185",
                                      "grid-md-auto": "MuiGrid-grid-md-auto-175",
                                      "grid-md-true": "MuiGrid-grid-md-true-176",
                                      "grid-sm-1": "MuiGrid-grid-sm-1-163",
                                      "grid-sm-10": "MuiGrid-grid-sm-10-172",
                                      "grid-sm-11": "MuiGrid-grid-sm-11-173",
                                      "grid-sm-12": "MuiGrid-grid-sm-12-174",
                                      "grid-sm-2": "MuiGrid-grid-sm-2-164",
                                      "grid-sm-3": "MuiGrid-grid-sm-3-165",
                                      "grid-sm-4": "MuiGrid-grid-sm-4-166",
                                      "grid-sm-5": "MuiGrid-grid-sm-5-167",
                                      "grid-sm-6": "MuiGrid-grid-sm-6-168",
                                      "grid-sm-7": "MuiGrid-grid-sm-7-169",
                                      "grid-sm-8": "MuiGrid-grid-sm-8-170",
                                      "grid-sm-9": "MuiGrid-grid-sm-9-171",
                                      "grid-sm-auto": "MuiGrid-grid-sm-auto-161",
                                      "grid-sm-true": "MuiGrid-grid-sm-true-162",
                                      "grid-xl-1": "MuiGrid-grid-xl-1-205",
                                      "grid-xl-10": "MuiGrid-grid-xl-10-214",
                                      "grid-xl-11": "MuiGrid-grid-xl-11-215",
                                      "grid-xl-12": "MuiGrid-grid-xl-12-216",
                                      "grid-xl-2": "MuiGrid-grid-xl-2-206",
                                      "grid-xl-3": "MuiGrid-grid-xl-3-207",
                                      "grid-xl-4": "MuiGrid-grid-xl-4-208",
                                      "grid-xl-5": "MuiGrid-grid-xl-5-209",
                                      "grid-xl-6": "MuiGrid-grid-xl-6-210",
                                      "grid-xl-7": "MuiGrid-grid-xl-7-211",
                                      "grid-xl-8": "MuiGrid-grid-xl-8-212",
                                      "grid-xl-9": "MuiGrid-grid-xl-9-213",
                                      "grid-xl-auto": "MuiGrid-grid-xl-auto-203",
                                      "grid-xl-true": "MuiGrid-grid-xl-true-204",
                                      "grid-xs-1": "MuiGrid-grid-xs-1-149",
                                      "grid-xs-10": "MuiGrid-grid-xs-10-158",
                                      "grid-xs-11": "MuiGrid-grid-xs-11-159",
                                      "grid-xs-12": "MuiGrid-grid-xs-12-160",
                                      "grid-xs-2": "MuiGrid-grid-xs-2-150",
                                      "grid-xs-3": "MuiGrid-grid-xs-3-151",
                                      "grid-xs-4": "MuiGrid-grid-xs-4-152",
                                      "grid-xs-5": "MuiGrid-grid-xs-5-153",
                                      "grid-xs-6": "MuiGrid-grid-xs-6-154",
                                      "grid-xs-7": "MuiGrid-grid-xs-7-155",
                                      "grid-xs-8": "MuiGrid-grid-xs-8-156",
                                      "grid-xs-9": "MuiGrid-grid-xs-9-157",
                                      "grid-xs-auto": "MuiGrid-grid-xs-auto-147",
                                      "grid-xs-true": "MuiGrid-grid-xs-true-148",
                                      "item": "MuiGrid-item-121",
                                      "justify-xs-center": "MuiGrid-justify-xs-center-137",
                                      "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-138",
                                      "justify-xs-space-around": "MuiGrid-justify-xs-space-around-140",
                                      "justify-xs-space-between": "MuiGrid-justify-xs-space-between-139",
                                      "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-141",
                                      "spacing-xs-16": "MuiGrid-spacing-xs-16-143",
                                      "spacing-xs-24": "MuiGrid-spacing-xs-24-144",
                                      "spacing-xs-32": "MuiGrid-spacing-xs-32-145",
                                      "spacing-xs-40": "MuiGrid-spacing-xs-40-146",
                                      "spacing-xs-8": "MuiGrid-spacing-xs-8-142",
                                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-126",
                                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-127",
                                      "zeroMinWidth": "MuiGrid-zeroMinWidth-122",
                                    }
                                  }
                                  component="div"
                                  container={false}
                                  direction="row"
                                  item={true}
                                  justify="flex-start"
                                  lg={false}
                                  md={false}
                                  sm={6}
                                  spacing={0}
                                  wrap="wrap"
                                  xl={false}
                                  xs={12}
                                  zeroMinWidth={false}
                                >
                                  <div
                                    className="MuiGrid-item-121 MuiGrid-grid-xs-12-160 MuiGrid-grid-sm-6-168"
                                  >
                                    <TextField
                                      fullWidth={true}
                                      label="Ingredient"
                                      name="ingredients[0].name"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      required={false}
                                      select={false}
                                      value="Sone ingredient"
                                      variant="standard"
                                    >
                                      <WithStyles(FormControl)
                                        fullWidth={true}
                                        required={false}
                                        variant="standard"
                                      >
                                        <FormControl
                                          classes={
                                            Object {
                                              "fullWidth": "MuiFormControl-fullWidth-71",
                                              "marginDense": "MuiFormControl-marginDense-70",
                                              "marginNormal": "MuiFormControl-marginNormal-69",
                                              "root": "MuiFormControl-root-68",
                                            }
                                          }
                                          component="div"
                                          disabled={false}
                                          error={false}
                                          fullWidth={true}
                                          margin="none"
                                          required={false}
                                          variant="standard"
                                        >
                                          <div
                                            className="MuiFormControl-root-68 MuiFormControl-fullWidth-71"
                                          >
                                            <WithStyles(WithFormControlContext(InputLabel))>
                                              <WithFormControlContext(InputLabel)
                                                classes={
                                                  Object {
                                                    "animated": "MuiInputLabel-animated-80",
                                                    "disabled": "MuiInputLabel-disabled-74",
                                                    "error": "MuiInputLabel-error-75",
                                                    "filled": "MuiInputLabel-filled-81",
                                                    "focused": "MuiInputLabel-focused-73",
                                                    "formControl": "MuiInputLabel-formControl-77",
                                                    "marginDense": "MuiInputLabel-marginDense-78",
                                                    "outlined": "MuiInputLabel-outlined-82",
                                                    "required": "MuiInputLabel-required-76",
                                                    "root": "MuiInputLabel-root-72",
                                                    "shrink": "MuiInputLabel-shrink-79",
                                                  }
                                                }
                                              >
                                                <InputLabel
                                                  classes={
                                                    Object {
                                                      "animated": "MuiInputLabel-animated-80",
                                                      "disabled": "MuiInputLabel-disabled-74",
                                                      "error": "MuiInputLabel-error-75",
                                                      "filled": "MuiInputLabel-filled-81",
                                                      "focused": "MuiInputLabel-focused-73",
                                                      "formControl": "MuiInputLabel-formControl-77",
                                                      "marginDense": "MuiInputLabel-marginDense-78",
                                                      "outlined": "MuiInputLabel-outlined-82",
                                                      "required": "MuiInputLabel-required-76",
                                                      "root": "MuiInputLabel-root-72",
                                                      "shrink": "MuiInputLabel-shrink-79",
                                                    }
                                                  }
                                                  disableAnimation={false}
                                                  muiFormControl={
                                                    Object {
                                                      "adornedStart": false,
                                                      "disabled": false,
                                                      "error": false,
                                                      "filled": true,
                                                      "focused": false,
                                                      "margin": "none",
                                                      "onBlur": [Function],
                                                      "onEmpty": [Function],
                                                      "onFilled": [Function],
                                                      "onFocus": [Function],
                                                      "required": false,
                                                      "variant": "standard",
                                                    }
                                                  }
                                                >
                                                  <WithStyles(WithFormControlContext(FormLabel))
                                                    className="MuiInputLabel-root-72 MuiInputLabel-formControl-77 MuiInputLabel-animated-80 MuiInputLabel-shrink-79"
                                                    classes={
                                                      Object {
                                                        "disabled": "MuiInputLabel-disabled-74",
                                                        "error": "MuiInputLabel-error-75",
                                                        "focused": "MuiInputLabel-focused-73",
                                                        "required": "MuiInputLabel-required-76",
                                                      }
                                                    }
                                                    data-shrink={true}
                                                  >
                                                    <WithFormControlContext(FormLabel)
                                                      className="MuiInputLabel-root-72 MuiInputLabel-formControl-77 MuiInputLabel-animated-80 MuiInputLabel-shrink-79"
                                                      classes={
                                                        Object {
                                                          "asterisk": "MuiFormLabel-asterisk-89",
                                                          "disabled": "MuiFormLabel-disabled-85 MuiInputLabel-disabled-74",
                                                          "error": "MuiFormLabel-error-86 MuiInputLabel-error-75",
                                                          "filled": "MuiFormLabel-filled-87",
                                                          "focused": "MuiFormLabel-focused-84 MuiInputLabel-focused-73",
                                                          "required": "MuiFormLabel-required-88 MuiInputLabel-required-76",
                                                          "root": "MuiFormLabel-root-83",
                                                        }
                                                      }
                                                      data-shrink={true}
                                                    >
                                                      <FormLabel
                                                        className="MuiInputLabel-root-72 MuiInputLabel-formControl-77 MuiInputLabel-animated-80 MuiInputLabel-shrink-79"
                                                        classes={
                                                          Object {
                                                            "asterisk": "MuiFormLabel-asterisk-89",
                                                            "disabled": "MuiFormLabel-disabled-85 MuiInputLabel-disabled-74",
                                                            "error": "MuiFormLabel-error-86 MuiInputLabel-error-75",
                                                            "filled": "MuiFormLabel-filled-87",
                                                            "focused": "MuiFormLabel-focused-84 MuiInputLabel-focused-73",
                                                            "required": "MuiFormLabel-required-88 MuiInputLabel-required-76",
                                                            "root": "MuiFormLabel-root-83",
                                                          }
                                                        }
                                                        component="label"
                                                        data-shrink={true}
                                                        muiFormControl={
                                                          Object {
                                                            "adornedStart": false,
                                                            "disabled": false,
                                                            "error": false,
                                                            "filled": true,
                                                            "focused": false,
                                                            "margin": "none",
                                                            "onBlur": [Function],
                                                            "onEmpty": [Function],
                                                            "onFilled": [Function],
                                                            "onFocus": [Function],
                                                            "required": false,
                                                            "variant": "standard",
                                                          }
                                                        }
                                                      >
                                                        <label
                                                          className="MuiFormLabel-root-83 MuiFormLabel-filled-87 MuiInputLabel-root-72 MuiInputLabel-formControl-77 MuiInputLabel-animated-80 MuiInputLabel-shrink-79"
                                                          data-shrink={true}
                                                        >
                                                          Ingredient
                                                        </label>
                                                      </FormLabel>
                                                    </WithFormControlContext(FormLabel)>
                                                  </WithStyles(WithFormControlContext(FormLabel))>
                                                </InputLabel>
                                              </WithFormControlContext(InputLabel)>
                                            </WithStyles(WithFormControlContext(InputLabel))>
                                            <WithStyles(Input)
                                              fullWidth={true}
                                              name="ingredients[0].name"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value="Sone ingredient"
                                            >
                                              <Input
                                                classes={
                                                  Object {
                                                    "disabled": "MuiInput-disabled-93",
                                                    "error": "MuiInput-error-95",
                                                    "focused": "MuiInput-focused-92",
                                                    "formControl": "MuiInput-formControl-91",
                                                    "fullWidth": "MuiInput-fullWidth-97",
                                                    "input": "MuiInput-input-98",
                                                    "inputMarginDense": "MuiInput-inputMarginDense-99",
                                                    "inputMultiline": "MuiInput-inputMultiline-100",
                                                    "inputType": "MuiInput-inputType-101",
                                                    "inputTypeSearch": "MuiInput-inputTypeSearch-102",
                                                    "multiline": "MuiInput-multiline-96",
                                                    "root": "MuiInput-root-90",
                                                    "underline": "MuiInput-underline-94",
                                                  }
                                                }
                                                fullWidth={true}
                                                name="ingredients[0].name"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                value="Sone ingredient"
                                              >
                                                <WithStyles(WithFormControlContext(InputBase))
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiInput-disabled-93",
                                                      "error": "MuiInput-error-95",
                                                      "focused": "MuiInput-focused-92",
                                                      "formControl": "MuiInput-formControl-91",
                                                      "fullWidth": "MuiInput-fullWidth-97",
                                                      "input": "MuiInput-input-98",
                                                      "inputMarginDense": "MuiInput-inputMarginDense-99",
                                                      "inputMultiline": "MuiInput-inputMultiline-100",
                                                      "inputType": "MuiInput-inputType-101",
                                                      "inputTypeSearch": "MuiInput-inputTypeSearch-102",
                                                      "multiline": "MuiInput-multiline-96",
                                                      "root": "MuiInput-root-90 MuiInput-underline-94",
                                                      "underline": null,
                                                    }
                                                  }
                                                  fullWidth={true}
                                                  inputComponent="input"
                                                  multiline={false}
                                                  name="ingredients[0].name"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  type="text"
                                                  value="Sone ingredient"
                                                >
                                                  <WithFormControlContext(InputBase)
                                                    classes={
                                                      Object {
                                                        "adornedEnd": "MuiInputBase-adornedEnd-108",
                                                        "adornedStart": "MuiInputBase-adornedStart-107",
                                                        "disabled": "MuiInputBase-disabled-106 MuiInput-disabled-93",
                                                        "error": "MuiInputBase-error-109 MuiInput-error-95",
                                                        "focused": "MuiInputBase-focused-105 MuiInput-focused-92",
                                                        "formControl": "MuiInputBase-formControl-104 MuiInput-formControl-91",
                                                        "fullWidth": "MuiInputBase-fullWidth-112 MuiInput-fullWidth-97",
                                                        "input": "MuiInputBase-input-113 MuiInput-input-98",
                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-119",
                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart-118",
                                                        "inputMarginDense": "MuiInputBase-inputMarginDense-114 MuiInput-inputMarginDense-99",
                                                        "inputMultiline": "MuiInputBase-inputMultiline-115 MuiInput-inputMultiline-100",
                                                        "inputType": "MuiInputBase-inputType-116 MuiInput-inputType-101",
                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch-117 MuiInput-inputTypeSearch-102",
                                                        "marginDense": "MuiInputBase-marginDense-110",
                                                        "multiline": "MuiInputBase-multiline-111 MuiInput-multiline-96",
                                                        "root": "MuiInputBase-root-103 MuiInput-root-90 MuiInput-underline-94",
                                                      }
                                                    }
                                                    fullWidth={true}
                                                    inputComponent="input"
                                                    multiline={false}
                                                    name="ingredients[0].name"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    type="text"
                                                    value="Sone ingredient"
                                                  >
                                                    <InputBase
                                                      classes={
                                                        Object {
                                                          "adornedEnd": "MuiInputBase-adornedEnd-108",
                                                          "adornedStart": "MuiInputBase-adornedStart-107",
                                                          "disabled": "MuiInputBase-disabled-106 MuiInput-disabled-93",
                                                          "error": "MuiInputBase-error-109 MuiInput-error-95",
                                                          "focused": "MuiInputBase-focused-105 MuiInput-focused-92",
                                                          "formControl": "MuiInputBase-formControl-104 MuiInput-formControl-91",
                                                          "fullWidth": "MuiInputBase-fullWidth-112 MuiInput-fullWidth-97",
                                                          "input": "MuiInputBase-input-113 MuiInput-input-98",
                                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-119",
                                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart-118",
                                                          "inputMarginDense": "MuiInputBase-inputMarginDense-114 MuiInput-inputMarginDense-99",
                                                          "inputMultiline": "MuiInputBase-inputMultiline-115 MuiInput-inputMultiline-100",
                                                          "inputType": "MuiInputBase-inputType-116 MuiInput-inputType-101",
                                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch-117 MuiInput-inputTypeSearch-102",
                                                          "marginDense": "MuiInputBase-marginDense-110",
                                                          "multiline": "MuiInputBase-multiline-111 MuiInput-multiline-96",
                                                          "root": "MuiInputBase-root-103 MuiInput-root-90 MuiInput-underline-94",
                                                        }
                                                      }
                                                      fullWidth={true}
                                                      inputComponent="input"
                                                      muiFormControl={
                                                        Object {
                                                          "adornedStart": false,
                                                          "disabled": false,
                                                          "error": false,
                                                          "filled": true,
                                                          "focused": false,
                                                          "margin": "none",
                                                          "onBlur": [Function],
                                                          "onEmpty": [Function],
                                                          "onFilled": [Function],
                                                          "onFocus": [Function],
                                                          "required": false,
                                                          "variant": "standard",
                                                        }
                                                      }
                                                      multiline={false}
                                                      name="ingredients[0].name"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      type="text"
                                                      value="Sone ingredient"
                                                    >
                                                      <div
                                                        className="MuiInputBase-root-103 MuiInput-root-90 MuiInput-underline-94 MuiInputBase-fullWidth-112 MuiInput-fullWidth-97 MuiInputBase-formControl-104 MuiInput-formControl-91"
                                                        onClick={[Function]}
                                                      >
                                                        <input
                                                          aria-invalid={false}
                                                          className="MuiInputBase-input-113 MuiInput-input-98"
                                                          disabled={false}
                                                          name="ingredients[0].name"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          required={false}
                                                          type="text"
                                                          value="Sone ingredient"
                                                        />
                                                      </div>
                                                    </InputBase>
                                                  </WithFormControlContext(InputBase)>
                                                </WithStyles(WithFormControlContext(InputBase))>
                                              </Input>
                                            </WithStyles(Input)>
                                          </div>
                                        </FormControl>
                                      </WithStyles(FormControl)>
                                    </TextField>
                                  </div>
                                </Grid>
                              </WithStyles(Grid)>
                              <WithStyles(Grid)
                                item={true}
                                sm={2}
                                xs={12}
                              >
                                <Grid
                                  alignContent="stretch"
                                  alignItems="stretch"
                                  classes={
                                    Object {
                                      "align-content-xs-center": "MuiGrid-align-content-xs-center-132",
                                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-134",
                                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-133",
                                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-136",
                                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-135",
                                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-131",
                                      "align-items-xs-center": "MuiGrid-align-items-xs-center-128",
                                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-130",
                                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-129",
                                      "container": "MuiGrid-container-120",
                                      "direction-xs-column": "MuiGrid-direction-xs-column-123",
                                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-124",
                                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-125",
                                      "grid-lg-1": "MuiGrid-grid-lg-1-191",
                                      "grid-lg-10": "MuiGrid-grid-lg-10-200",
                                      "grid-lg-11": "MuiGrid-grid-lg-11-201",
                                      "grid-lg-12": "MuiGrid-grid-lg-12-202",
                                      "grid-lg-2": "MuiGrid-grid-lg-2-192",
                                      "grid-lg-3": "MuiGrid-grid-lg-3-193",
                                      "grid-lg-4": "MuiGrid-grid-lg-4-194",
                                      "grid-lg-5": "MuiGrid-grid-lg-5-195",
                                      "grid-lg-6": "MuiGrid-grid-lg-6-196",
                                      "grid-lg-7": "MuiGrid-grid-lg-7-197",
                                      "grid-lg-8": "MuiGrid-grid-lg-8-198",
                                      "grid-lg-9": "MuiGrid-grid-lg-9-199",
                                      "grid-lg-auto": "MuiGrid-grid-lg-auto-189",
                                      "grid-lg-true": "MuiGrid-grid-lg-true-190",
                                      "grid-md-1": "MuiGrid-grid-md-1-177",
                                      "grid-md-10": "MuiGrid-grid-md-10-186",
                                      "grid-md-11": "MuiGrid-grid-md-11-187",
                                      "grid-md-12": "MuiGrid-grid-md-12-188",
                                      "grid-md-2": "MuiGrid-grid-md-2-178",
                                      "grid-md-3": "MuiGrid-grid-md-3-179",
                                      "grid-md-4": "MuiGrid-grid-md-4-180",
                                      "grid-md-5": "MuiGrid-grid-md-5-181",
                                      "grid-md-6": "MuiGrid-grid-md-6-182",
                                      "grid-md-7": "MuiGrid-grid-md-7-183",
                                      "grid-md-8": "MuiGrid-grid-md-8-184",
                                      "grid-md-9": "MuiGrid-grid-md-9-185",
                                      "grid-md-auto": "MuiGrid-grid-md-auto-175",
                                      "grid-md-true": "MuiGrid-grid-md-true-176",
                                      "grid-sm-1": "MuiGrid-grid-sm-1-163",
                                      "grid-sm-10": "MuiGrid-grid-sm-10-172",
                                      "grid-sm-11": "MuiGrid-grid-sm-11-173",
                                      "grid-sm-12": "MuiGrid-grid-sm-12-174",
                                      "grid-sm-2": "MuiGrid-grid-sm-2-164",
                                      "grid-sm-3": "MuiGrid-grid-sm-3-165",
                                      "grid-sm-4": "MuiGrid-grid-sm-4-166",
                                      "grid-sm-5": "MuiGrid-grid-sm-5-167",
                                      "grid-sm-6": "MuiGrid-grid-sm-6-168",
                                      "grid-sm-7": "MuiGrid-grid-sm-7-169",
                                      "grid-sm-8": "MuiGrid-grid-sm-8-170",
                                      "grid-sm-9": "MuiGrid-grid-sm-9-171",
                                      "grid-sm-auto": "MuiGrid-grid-sm-auto-161",
                                      "grid-sm-true": "MuiGrid-grid-sm-true-162",
                                      "grid-xl-1": "MuiGrid-grid-xl-1-205",
                                      "grid-xl-10": "MuiGrid-grid-xl-10-214",
                                      "grid-xl-11": "MuiGrid-grid-xl-11-215",
                                      "grid-xl-12": "MuiGrid-grid-xl-12-216",
                                      "grid-xl-2": "MuiGrid-grid-xl-2-206",
                                      "grid-xl-3": "MuiGrid-grid-xl-3-207",
                                      "grid-xl-4": "MuiGrid-grid-xl-4-208",
                                      "grid-xl-5": "MuiGrid-grid-xl-5-209",
                                      "grid-xl-6": "MuiGrid-grid-xl-6-210",
                                      "grid-xl-7": "MuiGrid-grid-xl-7-211",
                                      "grid-xl-8": "MuiGrid-grid-xl-8-212",
                                      "grid-xl-9": "MuiGrid-grid-xl-9-213",
                                      "grid-xl-auto": "MuiGrid-grid-xl-auto-203",
                                      "grid-xl-true": "MuiGrid-grid-xl-true-204",
                                      "grid-xs-1": "MuiGrid-grid-xs-1-149",
                                      "grid-xs-10": "MuiGrid-grid-xs-10-158",
                                      "grid-xs-11": "MuiGrid-grid-xs-11-159",
                                      "grid-xs-12": "MuiGrid-grid-xs-12-160",
                                      "grid-xs-2": "MuiGrid-grid-xs-2-150",
                                      "grid-xs-3": "MuiGrid-grid-xs-3-151",
                                      "grid-xs-4": "MuiGrid-grid-xs-4-152",
                                      "grid-xs-5": "MuiGrid-grid-xs-5-153",
                                      "grid-xs-6": "MuiGrid-grid-xs-6-154",
                                      "grid-xs-7": "MuiGrid-grid-xs-7-155",
                                      "grid-xs-8": "MuiGrid-grid-xs-8-156",
                                      "grid-xs-9": "MuiGrid-grid-xs-9-157",
                                      "grid-xs-auto": "MuiGrid-grid-xs-auto-147",
                                      "grid-xs-true": "MuiGrid-grid-xs-true-148",
                                      "item": "MuiGrid-item-121",
                                      "justify-xs-center": "MuiGrid-justify-xs-center-137",
                                      "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-138",
                                      "justify-xs-space-around": "MuiGrid-justify-xs-space-around-140",
                                      "justify-xs-space-between": "MuiGrid-justify-xs-space-between-139",
                                      "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-141",
                                      "spacing-xs-16": "MuiGrid-spacing-xs-16-143",
                                      "spacing-xs-24": "MuiGrid-spacing-xs-24-144",
                                      "spacing-xs-32": "MuiGrid-spacing-xs-32-145",
                                      "spacing-xs-40": "MuiGrid-spacing-xs-40-146",
                                      "spacing-xs-8": "MuiGrid-spacing-xs-8-142",
                                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-126",
                                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-127",
                                      "zeroMinWidth": "MuiGrid-zeroMinWidth-122",
                                    }
                                  }
                                  component="div"
                                  container={false}
                                  direction="row"
                                  item={true}
                                  justify="flex-start"
                                  lg={false}
                                  md={false}
                                  sm={2}
                                  spacing={0}
                                  wrap="wrap"
                                  xl={false}
                                  xs={12}
                                  zeroMinWidth={false}
                                >
                                  <div
                                    className="MuiGrid-item-121 MuiGrid-grid-xs-12-160 MuiGrid-grid-sm-2-164"
                                  >
                                    <WithStyles(Grid)
                                      container={true}
                                      justify="center"
                                    >
                                      <Grid
                                        alignContent="stretch"
                                        alignItems="stretch"
                                        classes={
                                          Object {
                                            "align-content-xs-center": "MuiGrid-align-content-xs-center-132",
                                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-134",
                                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-133",
                                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-136",
                                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-135",
                                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-131",
                                            "align-items-xs-center": "MuiGrid-align-items-xs-center-128",
                                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-130",
                                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-129",
                                            "container": "MuiGrid-container-120",
                                            "direction-xs-column": "MuiGrid-direction-xs-column-123",
                                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-124",
                                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-125",
                                            "grid-lg-1": "MuiGrid-grid-lg-1-191",
                                            "grid-lg-10": "MuiGrid-grid-lg-10-200",
                                            "grid-lg-11": "MuiGrid-grid-lg-11-201",
                                            "grid-lg-12": "MuiGrid-grid-lg-12-202",
                                            "grid-lg-2": "MuiGrid-grid-lg-2-192",
                                            "grid-lg-3": "MuiGrid-grid-lg-3-193",
                                            "grid-lg-4": "MuiGrid-grid-lg-4-194",
                                            "grid-lg-5": "MuiGrid-grid-lg-5-195",
                                            "grid-lg-6": "MuiGrid-grid-lg-6-196",
                                            "grid-lg-7": "MuiGrid-grid-lg-7-197",
                                            "grid-lg-8": "MuiGrid-grid-lg-8-198",
                                            "grid-lg-9": "MuiGrid-grid-lg-9-199",
                                            "grid-lg-auto": "MuiGrid-grid-lg-auto-189",
                                            "grid-lg-true": "MuiGrid-grid-lg-true-190",
                                            "grid-md-1": "MuiGrid-grid-md-1-177",
                                            "grid-md-10": "MuiGrid-grid-md-10-186",
                                            "grid-md-11": "MuiGrid-grid-md-11-187",
                                            "grid-md-12": "MuiGrid-grid-md-12-188",
                                            "grid-md-2": "MuiGrid-grid-md-2-178",
                                            "grid-md-3": "MuiGrid-grid-md-3-179",
                                            "grid-md-4": "MuiGrid-grid-md-4-180",
                                            "grid-md-5": "MuiGrid-grid-md-5-181",
                                            "grid-md-6": "MuiGrid-grid-md-6-182",
                                            "grid-md-7": "MuiGrid-grid-md-7-183",
                                            "grid-md-8": "MuiGrid-grid-md-8-184",
                                            "grid-md-9": "MuiGrid-grid-md-9-185",
                                            "grid-md-auto": "MuiGrid-grid-md-auto-175",
                                            "grid-md-true": "MuiGrid-grid-md-true-176",
                                            "grid-sm-1": "MuiGrid-grid-sm-1-163",
                                            "grid-sm-10": "MuiGrid-grid-sm-10-172",
                                            "grid-sm-11": "MuiGrid-grid-sm-11-173",
                                            "grid-sm-12": "MuiGrid-grid-sm-12-174",
                                            "grid-sm-2": "MuiGrid-grid-sm-2-164",
                                            "grid-sm-3": "MuiGrid-grid-sm-3-165",
                                            "grid-sm-4": "MuiGrid-grid-sm-4-166",
                                            "grid-sm-5": "MuiGrid-grid-sm-5-167",
                                            "grid-sm-6": "MuiGrid-grid-sm-6-168",
                                            "grid-sm-7": "MuiGrid-grid-sm-7-169",
                                            "grid-sm-8": "MuiGrid-grid-sm-8-170",
                                            "grid-sm-9": "MuiGrid-grid-sm-9-171",
                                            "grid-sm-auto": "MuiGrid-grid-sm-auto-161",
                                            "grid-sm-true": "MuiGrid-grid-sm-true-162",
                                            "grid-xl-1": "MuiGrid-grid-xl-1-205",
                                            "grid-xl-10": "MuiGrid-grid-xl-10-214",
                                            "grid-xl-11": "MuiGrid-grid-xl-11-215",
                                            "grid-xl-12": "MuiGrid-grid-xl-12-216",
                                            "grid-xl-2": "MuiGrid-grid-xl-2-206",
                                            "grid-xl-3": "MuiGrid-grid-xl-3-207",
                                            "grid-xl-4": "MuiGrid-grid-xl-4-208",
                                            "grid-xl-5": "MuiGrid-grid-xl-5-209",
                                            "grid-xl-6": "MuiGrid-grid-xl-6-210",
                                            "grid-xl-7": "MuiGrid-grid-xl-7-211",
                                            "grid-xl-8": "MuiGrid-grid-xl-8-212",
                                            "grid-xl-9": "MuiGrid-grid-xl-9-213",
                                            "grid-xl-auto": "MuiGrid-grid-xl-auto-203",
                                            "grid-xl-true": "MuiGrid-grid-xl-true-204",
                                            "grid-xs-1": "MuiGrid-grid-xs-1-149",
                                            "grid-xs-10": "MuiGrid-grid-xs-10-158",
                                            "grid-xs-11": "MuiGrid-grid-xs-11-159",
                                            "grid-xs-12": "MuiGrid-grid-xs-12-160",
                                            "grid-xs-2": "MuiGrid-grid-xs-2-150",
                                            "grid-xs-3": "MuiGrid-grid-xs-3-151",
                                            "grid-xs-4": "MuiGrid-grid-xs-4-152",
                                            "grid-xs-5": "MuiGrid-grid-xs-5-153",
                                            "grid-xs-6": "MuiGrid-grid-xs-6-154",
                                            "grid-xs-7": "MuiGrid-grid-xs-7-155",
                                            "grid-xs-8": "MuiGrid-grid-xs-8-156",
                                            "grid-xs-9": "MuiGrid-grid-xs-9-157",
                                            "grid-xs-auto": "MuiGrid-grid-xs-auto-147",
                                            "grid-xs-true": "MuiGrid-grid-xs-true-148",
                                            "item": "MuiGrid-item-121",
                                            "justify-xs-center": "MuiGrid-justify-xs-center-137",
                                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-138",
                                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around-140",
                                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between-139",
                                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-141",
                                            "spacing-xs-16": "MuiGrid-spacing-xs-16-143",
                                            "spacing-xs-24": "MuiGrid-spacing-xs-24-144",
                                            "spacing-xs-32": "MuiGrid-spacing-xs-32-145",
                                            "spacing-xs-40": "MuiGrid-spacing-xs-40-146",
                                            "spacing-xs-8": "MuiGrid-spacing-xs-8-142",
                                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-126",
                                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-127",
                                            "zeroMinWidth": "MuiGrid-zeroMinWidth-122",
                                          }
                                        }
                                        component="div"
                                        container={true}
                                        direction="row"
                                        item={false}
                                        justify="center"
                                        lg={false}
                                        md={false}
                                        sm={false}
                                        spacing={0}
                                        wrap="wrap"
                                        xl={false}
                                        xs={false}
                                        zeroMinWidth={false}
                                      >
                                        <div
                                          className="MuiGrid-container-120 MuiGrid-justify-xs-center-137"
                                        >
                                          <WithStyles(IconButton)
                                            onClick={[Function]}
                                            tabIndex="-1"
                                          >
                                            <IconButton
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiIconButton-colorInherit-218",
                                                  "colorPrimary": "MuiIconButton-colorPrimary-219",
                                                  "colorSecondary": "MuiIconButton-colorSecondary-220",
                                                  "disabled": "MuiIconButton-disabled-221",
                                                  "label": "MuiIconButton-label-222",
                                                  "root": "MuiIconButton-root-217",
                                                }
                                              }
                                              color="default"
                                              disabled={false}
                                              onClick={[Function]}
                                              tabIndex="-1"
                                            >
                                              <WithStyles(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root-217"
                                                disabled={false}
                                                focusRipple={true}
                                                onClick={[Function]}
                                                tabIndex="-1"
                                              >
                                                <ButtonBase
                                                  centerRipple={true}
                                                  className="MuiIconButton-root-217"
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiButtonBase-disabled-224",
                                                      "focusVisible": "MuiButtonBase-focusVisible-225",
                                                      "root": "MuiButtonBase-root-223",
                                                    }
                                                  }
                                                  component="button"
                                                  disableRipple={false}
                                                  disableTouchRipple={false}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  onClick={[Function]}
                                                  tabIndex="-1"
                                                  type="button"
                                                >
                                                  <button
                                                    className="MuiButtonBase-root-223 MuiIconButton-root-217"
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onContextMenu={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    tabIndex="-1"
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiIconButton-label-222"
                                                    >
                                                      <pure(DeleteIcon)>
                                                        <DeleteIcon>
                                                          <WithStyles(SvgIcon)>
                                                            <SvgIcon
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction-229",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-231",
                                                                  "colorError": "MuiSvgIcon-colorError-230",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-227",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-228",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-232",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-234",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-233",
                                                                  "root": "MuiSvgIcon-root-226",
                                                                }
                                                              }
                                                              color="inherit"
                                                              component="svg"
                                                              fontSize="default"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                className="MuiSvgIcon-root-226"
                                                                focusable="false"
                                                                role="presentation"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                                                />
                                                                <path
                                                                  d="M0 0h24v24H0z"
                                                                  fill="none"
                                                                />
                                                              </svg>
                                                            </SvgIcon>
                                                          </WithStyles(SvgIcon)>
                                                        </DeleteIcon>
                                                      </pure(DeleteIcon)>
                                                    </span>
                                                    <NoSsr
                                                      defer={false}
                                                      fallback={null}
                                                    >
                                                      <WithStyles(TouchRipple)
                                                        center={true}
                                                        innerRef={[Function]}
                                                      >
                                                        <TouchRipple
                                                          center={true}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child-280",
                                                              "childLeaving": "MuiTouchRipple-childLeaving-281",
                                                              "childPulsate": "MuiTouchRipple-childPulsate-282",
                                                              "ripple": "MuiTouchRipple-ripple-277",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate-279",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible-278",
                                                              "root": "MuiTouchRipple-root-276",
                                                            }
                                                          }
                                                        >
                                                          <TransitionGroup
                                                            childFactory={[Function]}
                                                            className="MuiTouchRipple-root-276"
                                                            component="span"
                                                            enter={true}
                                                            exit={true}
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root-276"
                                                            />
                                                          </TransitionGroup>
                                                        </TouchRipple>
                                                      </WithStyles(TouchRipple)>
                                                    </NoSsr>
                                                  </button>
                                                </ButtonBase>
                                              </WithStyles(ButtonBase)>
                                            </IconButton>
                                          </WithStyles(IconButton)>
                                        </div>
                                      </Grid>
                                    </WithStyles(Grid)>
                                  </div>
                                </Grid>
                              </WithStyles(Grid)>
                            </div>
                          </Grid>
                        </WithStyles(Grid)>
                        <WithStyles(Grid)
                          className="ingredientField"
                          container={true}
                          justify="space-between"
                          key="adasdasd12345678"
                          spacing={24}
                        >
                          <Grid
                            alignContent="stretch"
                            alignItems="stretch"
                            className="ingredientField"
                            classes={
                              Object {
                                "align-content-xs-center": "MuiGrid-align-content-xs-center-132",
                                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-134",
                                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-133",
                                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-136",
                                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-135",
                                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-131",
                                "align-items-xs-center": "MuiGrid-align-items-xs-center-128",
                                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-130",
                                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-129",
                                "container": "MuiGrid-container-120",
                                "direction-xs-column": "MuiGrid-direction-xs-column-123",
                                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-124",
                                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-125",
                                "grid-lg-1": "MuiGrid-grid-lg-1-191",
                                "grid-lg-10": "MuiGrid-grid-lg-10-200",
                                "grid-lg-11": "MuiGrid-grid-lg-11-201",
                                "grid-lg-12": "MuiGrid-grid-lg-12-202",
                                "grid-lg-2": "MuiGrid-grid-lg-2-192",
                                "grid-lg-3": "MuiGrid-grid-lg-3-193",
                                "grid-lg-4": "MuiGrid-grid-lg-4-194",
                                "grid-lg-5": "MuiGrid-grid-lg-5-195",
                                "grid-lg-6": "MuiGrid-grid-lg-6-196",
                                "grid-lg-7": "MuiGrid-grid-lg-7-197",
                                "grid-lg-8": "MuiGrid-grid-lg-8-198",
                                "grid-lg-9": "MuiGrid-grid-lg-9-199",
                                "grid-lg-auto": "MuiGrid-grid-lg-auto-189",
                                "grid-lg-true": "MuiGrid-grid-lg-true-190",
                                "grid-md-1": "MuiGrid-grid-md-1-177",
                                "grid-md-10": "MuiGrid-grid-md-10-186",
                                "grid-md-11": "MuiGrid-grid-md-11-187",
                                "grid-md-12": "MuiGrid-grid-md-12-188",
                                "grid-md-2": "MuiGrid-grid-md-2-178",
                                "grid-md-3": "MuiGrid-grid-md-3-179",
                                "grid-md-4": "MuiGrid-grid-md-4-180",
                                "grid-md-5": "MuiGrid-grid-md-5-181",
                                "grid-md-6": "MuiGrid-grid-md-6-182",
                                "grid-md-7": "MuiGrid-grid-md-7-183",
                                "grid-md-8": "MuiGrid-grid-md-8-184",
                                "grid-md-9": "MuiGrid-grid-md-9-185",
                                "grid-md-auto": "MuiGrid-grid-md-auto-175",
                                "grid-md-true": "MuiGrid-grid-md-true-176",
                                "grid-sm-1": "MuiGrid-grid-sm-1-163",
                                "grid-sm-10": "MuiGrid-grid-sm-10-172",
                                "grid-sm-11": "MuiGrid-grid-sm-11-173",
                                "grid-sm-12": "MuiGrid-grid-sm-12-174",
                                "grid-sm-2": "MuiGrid-grid-sm-2-164",
                                "grid-sm-3": "MuiGrid-grid-sm-3-165",
                                "grid-sm-4": "MuiGrid-grid-sm-4-166",
                                "grid-sm-5": "MuiGrid-grid-sm-5-167",
                                "grid-sm-6": "MuiGrid-grid-sm-6-168",
                                "grid-sm-7": "MuiGrid-grid-sm-7-169",
                                "grid-sm-8": "MuiGrid-grid-sm-8-170",
                                "grid-sm-9": "MuiGrid-grid-sm-9-171",
                                "grid-sm-auto": "MuiGrid-grid-sm-auto-161",
                                "grid-sm-true": "MuiGrid-grid-sm-true-162",
                                "grid-xl-1": "MuiGrid-grid-xl-1-205",
                                "grid-xl-10": "MuiGrid-grid-xl-10-214",
                                "grid-xl-11": "MuiGrid-grid-xl-11-215",
                                "grid-xl-12": "MuiGrid-grid-xl-12-216",
                                "grid-xl-2": "MuiGrid-grid-xl-2-206",
                                "grid-xl-3": "MuiGrid-grid-xl-3-207",
                                "grid-xl-4": "MuiGrid-grid-xl-4-208",
                                "grid-xl-5": "MuiGrid-grid-xl-5-209",
                                "grid-xl-6": "MuiGrid-grid-xl-6-210",
                                "grid-xl-7": "MuiGrid-grid-xl-7-211",
                                "grid-xl-8": "MuiGrid-grid-xl-8-212",
                                "grid-xl-9": "MuiGrid-grid-xl-9-213",
                                "grid-xl-auto": "MuiGrid-grid-xl-auto-203",
                                "grid-xl-true": "MuiGrid-grid-xl-true-204",
                                "grid-xs-1": "MuiGrid-grid-xs-1-149",
                                "grid-xs-10": "MuiGrid-grid-xs-10-158",
                                "grid-xs-11": "MuiGrid-grid-xs-11-159",
                                "grid-xs-12": "MuiGrid-grid-xs-12-160",
                                "grid-xs-2": "MuiGrid-grid-xs-2-150",
                                "grid-xs-3": "MuiGrid-grid-xs-3-151",
                                "grid-xs-4": "MuiGrid-grid-xs-4-152",
                                "grid-xs-5": "MuiGrid-grid-xs-5-153",
                                "grid-xs-6": "MuiGrid-grid-xs-6-154",
                                "grid-xs-7": "MuiGrid-grid-xs-7-155",
                                "grid-xs-8": "MuiGrid-grid-xs-8-156",
                                "grid-xs-9": "MuiGrid-grid-xs-9-157",
                                "grid-xs-auto": "MuiGrid-grid-xs-auto-147",
                                "grid-xs-true": "MuiGrid-grid-xs-true-148",
                                "item": "MuiGrid-item-121",
                                "justify-xs-center": "MuiGrid-justify-xs-center-137",
                                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-138",
                                "justify-xs-space-around": "MuiGrid-justify-xs-space-around-140",
                                "justify-xs-space-between": "MuiGrid-justify-xs-space-between-139",
                                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-141",
                                "spacing-xs-16": "MuiGrid-spacing-xs-16-143",
                                "spacing-xs-24": "MuiGrid-spacing-xs-24-144",
                                "spacing-xs-32": "MuiGrid-spacing-xs-32-145",
                                "spacing-xs-40": "MuiGrid-spacing-xs-40-146",
                                "spacing-xs-8": "MuiGrid-spacing-xs-8-142",
                                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-126",
                                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-127",
                                "zeroMinWidth": "MuiGrid-zeroMinWidth-122",
                              }
                            }
                            component="div"
                            container={true}
                            direction="row"
                            item={false}
                            justify="space-between"
                            lg={false}
                            md={false}
                            sm={false}
                            spacing={24}
                            wrap="wrap"
                            xl={false}
                            xs={false}
                            zeroMinWidth={false}
                          >
                            <div
                              className="MuiGrid-container-120 MuiGrid-spacing-xs-24-144 MuiGrid-justify-xs-space-between-139 ingredientField"
                            >
                              <WithStyles(Grid)
                                item={true}
                                sm={6}
                                xs={12}
                              >
                                <Grid
                                  alignContent="stretch"
                                  alignItems="stretch"
                                  classes={
                                    Object {
                                      "align-content-xs-center": "MuiGrid-align-content-xs-center-132",
                                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-134",
                                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-133",
                                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-136",
                                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-135",
                                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-131",
                                      "align-items-xs-center": "MuiGrid-align-items-xs-center-128",
                                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-130",
                                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-129",
                                      "container": "MuiGrid-container-120",
                                      "direction-xs-column": "MuiGrid-direction-xs-column-123",
                                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-124",
                                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-125",
                                      "grid-lg-1": "MuiGrid-grid-lg-1-191",
                                      "grid-lg-10": "MuiGrid-grid-lg-10-200",
                                      "grid-lg-11": "MuiGrid-grid-lg-11-201",
                                      "grid-lg-12": "MuiGrid-grid-lg-12-202",
                                      "grid-lg-2": "MuiGrid-grid-lg-2-192",
                                      "grid-lg-3": "MuiGrid-grid-lg-3-193",
                                      "grid-lg-4": "MuiGrid-grid-lg-4-194",
                                      "grid-lg-5": "MuiGrid-grid-lg-5-195",
                                      "grid-lg-6": "MuiGrid-grid-lg-6-196",
                                      "grid-lg-7": "MuiGrid-grid-lg-7-197",
                                      "grid-lg-8": "MuiGrid-grid-lg-8-198",
                                      "grid-lg-9": "MuiGrid-grid-lg-9-199",
                                      "grid-lg-auto": "MuiGrid-grid-lg-auto-189",
                                      "grid-lg-true": "MuiGrid-grid-lg-true-190",
                                      "grid-md-1": "MuiGrid-grid-md-1-177",
                                      "grid-md-10": "MuiGrid-grid-md-10-186",
                                      "grid-md-11": "MuiGrid-grid-md-11-187",
                                      "grid-md-12": "MuiGrid-grid-md-12-188",
                                      "grid-md-2": "MuiGrid-grid-md-2-178",
                                      "grid-md-3": "MuiGrid-grid-md-3-179",
                                      "grid-md-4": "MuiGrid-grid-md-4-180",
                                      "grid-md-5": "MuiGrid-grid-md-5-181",
                                      "grid-md-6": "MuiGrid-grid-md-6-182",
                                      "grid-md-7": "MuiGrid-grid-md-7-183",
                                      "grid-md-8": "MuiGrid-grid-md-8-184",
                                      "grid-md-9": "MuiGrid-grid-md-9-185",
                                      "grid-md-auto": "MuiGrid-grid-md-auto-175",
                                      "grid-md-true": "MuiGrid-grid-md-true-176",
                                      "grid-sm-1": "MuiGrid-grid-sm-1-163",
                                      "grid-sm-10": "MuiGrid-grid-sm-10-172",
                                      "grid-sm-11": "MuiGrid-grid-sm-11-173",
                                      "grid-sm-12": "MuiGrid-grid-sm-12-174",
                                      "grid-sm-2": "MuiGrid-grid-sm-2-164",
                                      "grid-sm-3": "MuiGrid-grid-sm-3-165",
                                      "grid-sm-4": "MuiGrid-grid-sm-4-166",
                                      "grid-sm-5": "MuiGrid-grid-sm-5-167",
                                      "grid-sm-6": "MuiGrid-grid-sm-6-168",
                                      "grid-sm-7": "MuiGrid-grid-sm-7-169",
                                      "grid-sm-8": "MuiGrid-grid-sm-8-170",
                                      "grid-sm-9": "MuiGrid-grid-sm-9-171",
                                      "grid-sm-auto": "MuiGrid-grid-sm-auto-161",
                                      "grid-sm-true": "MuiGrid-grid-sm-true-162",
                                      "grid-xl-1": "MuiGrid-grid-xl-1-205",
                                      "grid-xl-10": "MuiGrid-grid-xl-10-214",
                                      "grid-xl-11": "MuiGrid-grid-xl-11-215",
                                      "grid-xl-12": "MuiGrid-grid-xl-12-216",
                                      "grid-xl-2": "MuiGrid-grid-xl-2-206",
                                      "grid-xl-3": "MuiGrid-grid-xl-3-207",
                                      "grid-xl-4": "MuiGrid-grid-xl-4-208",
                                      "grid-xl-5": "MuiGrid-grid-xl-5-209",
                                      "grid-xl-6": "MuiGrid-grid-xl-6-210",
                                      "grid-xl-7": "MuiGrid-grid-xl-7-211",
                                      "grid-xl-8": "MuiGrid-grid-xl-8-212",
                                      "grid-xl-9": "MuiGrid-grid-xl-9-213",
                                      "grid-xl-auto": "MuiGrid-grid-xl-auto-203",
                                      "grid-xl-true": "MuiGrid-grid-xl-true-204",
                                      "grid-xs-1": "MuiGrid-grid-xs-1-149",
                                      "grid-xs-10": "MuiGrid-grid-xs-10-158",
                                      "grid-xs-11": "MuiGrid-grid-xs-11-159",
                                      "grid-xs-12": "MuiGrid-grid-xs-12-160",
                                      "grid-xs-2": "MuiGrid-grid-xs-2-150",
                                      "grid-xs-3": "MuiGrid-grid-xs-3-151",
                                      "grid-xs-4": "MuiGrid-grid-xs-4-152",
                                      "grid-xs-5": "MuiGrid-grid-xs-5-153",
                                      "grid-xs-6": "MuiGrid-grid-xs-6-154",
                                      "grid-xs-7": "MuiGrid-grid-xs-7-155",
                                      "grid-xs-8": "MuiGrid-grid-xs-8-156",
                                      "grid-xs-9": "MuiGrid-grid-xs-9-157",
                                      "grid-xs-auto": "MuiGrid-grid-xs-auto-147",
                                      "grid-xs-true": "MuiGrid-grid-xs-true-148",
                                      "item": "MuiGrid-item-121",
                                      "justify-xs-center": "MuiGrid-justify-xs-center-137",
                                      "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-138",
                                      "justify-xs-space-around": "MuiGrid-justify-xs-space-around-140",
                                      "justify-xs-space-between": "MuiGrid-justify-xs-space-between-139",
                                      "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-141",
                                      "spacing-xs-16": "MuiGrid-spacing-xs-16-143",
                                      "spacing-xs-24": "MuiGrid-spacing-xs-24-144",
                                      "spacing-xs-32": "MuiGrid-spacing-xs-32-145",
                                      "spacing-xs-40": "MuiGrid-spacing-xs-40-146",
                                      "spacing-xs-8": "MuiGrid-spacing-xs-8-142",
                                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-126",
                                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-127",
                                      "zeroMinWidth": "MuiGrid-zeroMinWidth-122",
                                    }
                                  }
                                  component="div"
                                  container={false}
                                  direction="row"
                                  item={true}
                                  justify="flex-start"
                                  lg={false}
                                  md={false}
                                  sm={6}
                                  spacing={0}
                                  wrap="wrap"
                                  xl={false}
                                  xs={12}
                                  zeroMinWidth={false}
                                >
                                  <div
                                    className="MuiGrid-item-121 MuiGrid-grid-xs-12-160 MuiGrid-grid-sm-6-168"
                                  >
                                    <TextField
                                      fullWidth={true}
                                      label="Ingredient"
                                      name="ingredients[1].name"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      required={false}
                                      select={false}
                                      value="Some ingredient 02"
                                      variant="standard"
                                    >
                                      <WithStyles(FormControl)
                                        fullWidth={true}
                                        required={false}
                                        variant="standard"
                                      >
                                        <FormControl
                                          classes={
                                            Object {
                                              "fullWidth": "MuiFormControl-fullWidth-71",
                                              "marginDense": "MuiFormControl-marginDense-70",
                                              "marginNormal": "MuiFormControl-marginNormal-69",
                                              "root": "MuiFormControl-root-68",
                                            }
                                          }
                                          component="div"
                                          disabled={false}
                                          error={false}
                                          fullWidth={true}
                                          margin="none"
                                          required={false}
                                          variant="standard"
                                        >
                                          <div
                                            className="MuiFormControl-root-68 MuiFormControl-fullWidth-71"
                                          >
                                            <WithStyles(WithFormControlContext(InputLabel))>
                                              <WithFormControlContext(InputLabel)
                                                classes={
                                                  Object {
                                                    "animated": "MuiInputLabel-animated-80",
                                                    "disabled": "MuiInputLabel-disabled-74",
                                                    "error": "MuiInputLabel-error-75",
                                                    "filled": "MuiInputLabel-filled-81",
                                                    "focused": "MuiInputLabel-focused-73",
                                                    "formControl": "MuiInputLabel-formControl-77",
                                                    "marginDense": "MuiInputLabel-marginDense-78",
                                                    "outlined": "MuiInputLabel-outlined-82",
                                                    "required": "MuiInputLabel-required-76",
                                                    "root": "MuiInputLabel-root-72",
                                                    "shrink": "MuiInputLabel-shrink-79",
                                                  }
                                                }
                                              >
                                                <InputLabel
                                                  classes={
                                                    Object {
                                                      "animated": "MuiInputLabel-animated-80",
                                                      "disabled": "MuiInputLabel-disabled-74",
                                                      "error": "MuiInputLabel-error-75",
                                                      "filled": "MuiInputLabel-filled-81",
                                                      "focused": "MuiInputLabel-focused-73",
                                                      "formControl": "MuiInputLabel-formControl-77",
                                                      "marginDense": "MuiInputLabel-marginDense-78",
                                                      "outlined": "MuiInputLabel-outlined-82",
                                                      "required": "MuiInputLabel-required-76",
                                                      "root": "MuiInputLabel-root-72",
                                                      "shrink": "MuiInputLabel-shrink-79",
                                                    }
                                                  }
                                                  disableAnimation={false}
                                                  muiFormControl={
                                                    Object {
                                                      "adornedStart": false,
                                                      "disabled": false,
                                                      "error": false,
                                                      "filled": true,
                                                      "focused": false,
                                                      "margin": "none",
                                                      "onBlur": [Function],
                                                      "onEmpty": [Function],
                                                      "onFilled": [Function],
                                                      "onFocus": [Function],
                                                      "required": false,
                                                      "variant": "standard",
                                                    }
                                                  }
                                                >
                                                  <WithStyles(WithFormControlContext(FormLabel))
                                                    className="MuiInputLabel-root-72 MuiInputLabel-formControl-77 MuiInputLabel-animated-80 MuiInputLabel-shrink-79"
                                                    classes={
                                                      Object {
                                                        "disabled": "MuiInputLabel-disabled-74",
                                                        "error": "MuiInputLabel-error-75",
                                                        "focused": "MuiInputLabel-focused-73",
                                                        "required": "MuiInputLabel-required-76",
                                                      }
                                                    }
                                                    data-shrink={true}
                                                  >
                                                    <WithFormControlContext(FormLabel)
                                                      className="MuiInputLabel-root-72 MuiInputLabel-formControl-77 MuiInputLabel-animated-80 MuiInputLabel-shrink-79"
                                                      classes={
                                                        Object {
                                                          "asterisk": "MuiFormLabel-asterisk-89",
                                                          "disabled": "MuiFormLabel-disabled-85 MuiInputLabel-disabled-74",
                                                          "error": "MuiFormLabel-error-86 MuiInputLabel-error-75",
                                                          "filled": "MuiFormLabel-filled-87",
                                                          "focused": "MuiFormLabel-focused-84 MuiInputLabel-focused-73",
                                                          "required": "MuiFormLabel-required-88 MuiInputLabel-required-76",
                                                          "root": "MuiFormLabel-root-83",
                                                        }
                                                      }
                                                      data-shrink={true}
                                                    >
                                                      <FormLabel
                                                        className="MuiInputLabel-root-72 MuiInputLabel-formControl-77 MuiInputLabel-animated-80 MuiInputLabel-shrink-79"
                                                        classes={
                                                          Object {
                                                            "asterisk": "MuiFormLabel-asterisk-89",
                                                            "disabled": "MuiFormLabel-disabled-85 MuiInputLabel-disabled-74",
                                                            "error": "MuiFormLabel-error-86 MuiInputLabel-error-75",
                                                            "filled": "MuiFormLabel-filled-87",
                                                            "focused": "MuiFormLabel-focused-84 MuiInputLabel-focused-73",
                                                            "required": "MuiFormLabel-required-88 MuiInputLabel-required-76",
                                                            "root": "MuiFormLabel-root-83",
                                                          }
                                                        }
                                                        component="label"
                                                        data-shrink={true}
                                                        muiFormControl={
                                                          Object {
                                                            "adornedStart": false,
                                                            "disabled": false,
                                                            "error": false,
                                                            "filled": true,
                                                            "focused": false,
                                                            "margin": "none",
                                                            "onBlur": [Function],
                                                            "onEmpty": [Function],
                                                            "onFilled": [Function],
                                                            "onFocus": [Function],
                                                            "required": false,
                                                            "variant": "standard",
                                                          }
                                                        }
                                                      >
                                                        <label
                                                          className="MuiFormLabel-root-83 MuiFormLabel-filled-87 MuiInputLabel-root-72 MuiInputLabel-formControl-77 MuiInputLabel-animated-80 MuiInputLabel-shrink-79"
                                                          data-shrink={true}
                                                        >
                                                          Ingredient
                                                        </label>
                                                      </FormLabel>
                                                    </WithFormControlContext(FormLabel)>
                                                  </WithStyles(WithFormControlContext(FormLabel))>
                                                </InputLabel>
                                              </WithFormControlContext(InputLabel)>
                                            </WithStyles(WithFormControlContext(InputLabel))>
                                            <WithStyles(Input)
                                              fullWidth={true}
                                              name="ingredients[1].name"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value="Some ingredient 02"
                                            >
                                              <Input
                                                classes={
                                                  Object {
                                                    "disabled": "MuiInput-disabled-93",
                                                    "error": "MuiInput-error-95",
                                                    "focused": "MuiInput-focused-92",
                                                    "formControl": "MuiInput-formControl-91",
                                                    "fullWidth": "MuiInput-fullWidth-97",
                                                    "input": "MuiInput-input-98",
                                                    "inputMarginDense": "MuiInput-inputMarginDense-99",
                                                    "inputMultiline": "MuiInput-inputMultiline-100",
                                                    "inputType": "MuiInput-inputType-101",
                                                    "inputTypeSearch": "MuiInput-inputTypeSearch-102",
                                                    "multiline": "MuiInput-multiline-96",
                                                    "root": "MuiInput-root-90",
                                                    "underline": "MuiInput-underline-94",
                                                  }
                                                }
                                                fullWidth={true}
                                                name="ingredients[1].name"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                value="Some ingredient 02"
                                              >
                                                <WithStyles(WithFormControlContext(InputBase))
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiInput-disabled-93",
                                                      "error": "MuiInput-error-95",
                                                      "focused": "MuiInput-focused-92",
                                                      "formControl": "MuiInput-formControl-91",
                                                      "fullWidth": "MuiInput-fullWidth-97",
                                                      "input": "MuiInput-input-98",
                                                      "inputMarginDense": "MuiInput-inputMarginDense-99",
                                                      "inputMultiline": "MuiInput-inputMultiline-100",
                                                      "inputType": "MuiInput-inputType-101",
                                                      "inputTypeSearch": "MuiInput-inputTypeSearch-102",
                                                      "multiline": "MuiInput-multiline-96",
                                                      "root": "MuiInput-root-90 MuiInput-underline-94",
                                                      "underline": null,
                                                    }
                                                  }
                                                  fullWidth={true}
                                                  inputComponent="input"
                                                  multiline={false}
                                                  name="ingredients[1].name"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  type="text"
                                                  value="Some ingredient 02"
                                                >
                                                  <WithFormControlContext(InputBase)
                                                    classes={
                                                      Object {
                                                        "adornedEnd": "MuiInputBase-adornedEnd-108",
                                                        "adornedStart": "MuiInputBase-adornedStart-107",
                                                        "disabled": "MuiInputBase-disabled-106 MuiInput-disabled-93",
                                                        "error": "MuiInputBase-error-109 MuiInput-error-95",
                                                        "focused": "MuiInputBase-focused-105 MuiInput-focused-92",
                                                        "formControl": "MuiInputBase-formControl-104 MuiInput-formControl-91",
                                                        "fullWidth": "MuiInputBase-fullWidth-112 MuiInput-fullWidth-97",
                                                        "input": "MuiInputBase-input-113 MuiInput-input-98",
                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-119",
                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart-118",
                                                        "inputMarginDense": "MuiInputBase-inputMarginDense-114 MuiInput-inputMarginDense-99",
                                                        "inputMultiline": "MuiInputBase-inputMultiline-115 MuiInput-inputMultiline-100",
                                                        "inputType": "MuiInputBase-inputType-116 MuiInput-inputType-101",
                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch-117 MuiInput-inputTypeSearch-102",
                                                        "marginDense": "MuiInputBase-marginDense-110",
                                                        "multiline": "MuiInputBase-multiline-111 MuiInput-multiline-96",
                                                        "root": "MuiInputBase-root-103 MuiInput-root-90 MuiInput-underline-94",
                                                      }
                                                    }
                                                    fullWidth={true}
                                                    inputComponent="input"
                                                    multiline={false}
                                                    name="ingredients[1].name"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    type="text"
                                                    value="Some ingredient 02"
                                                  >
                                                    <InputBase
                                                      classes={
                                                        Object {
                                                          "adornedEnd": "MuiInputBase-adornedEnd-108",
                                                          "adornedStart": "MuiInputBase-adornedStart-107",
                                                          "disabled": "MuiInputBase-disabled-106 MuiInput-disabled-93",
                                                          "error": "MuiInputBase-error-109 MuiInput-error-95",
                                                          "focused": "MuiInputBase-focused-105 MuiInput-focused-92",
                                                          "formControl": "MuiInputBase-formControl-104 MuiInput-formControl-91",
                                                          "fullWidth": "MuiInputBase-fullWidth-112 MuiInput-fullWidth-97",
                                                          "input": "MuiInputBase-input-113 MuiInput-input-98",
                                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-119",
                                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart-118",
                                                          "inputMarginDense": "MuiInputBase-inputMarginDense-114 MuiInput-inputMarginDense-99",
                                                          "inputMultiline": "MuiInputBase-inputMultiline-115 MuiInput-inputMultiline-100",
                                                          "inputType": "MuiInputBase-inputType-116 MuiInput-inputType-101",
                                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch-117 MuiInput-inputTypeSearch-102",
                                                          "marginDense": "MuiInputBase-marginDense-110",
                                                          "multiline": "MuiInputBase-multiline-111 MuiInput-multiline-96",
                                                          "root": "MuiInputBase-root-103 MuiInput-root-90 MuiInput-underline-94",
                                                        }
                                                      }
                                                      fullWidth={true}
                                                      inputComponent="input"
                                                      muiFormControl={
                                                        Object {
                                                          "adornedStart": false,
                                                          "disabled": false,
                                                          "error": false,
                                                          "filled": true,
                                                          "focused": false,
                                                          "margin": "none",
                                                          "onBlur": [Function],
                                                          "onEmpty": [Function],
                                                          "onFilled": [Function],
                                                          "onFocus": [Function],
                                                          "required": false,
                                                          "variant": "standard",
                                                        }
                                                      }
                                                      multiline={false}
                                                      name="ingredients[1].name"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      type="text"
                                                      value="Some ingredient 02"
                                                    >
                                                      <div
                                                        className="MuiInputBase-root-103 MuiInput-root-90 MuiInput-underline-94 MuiInputBase-fullWidth-112 MuiInput-fullWidth-97 MuiInputBase-formControl-104 MuiInput-formControl-91"
                                                        onClick={[Function]}
                                                      >
                                                        <input
                                                          aria-invalid={false}
                                                          className="MuiInputBase-input-113 MuiInput-input-98"
                                                          disabled={false}
                                                          name="ingredients[1].name"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          required={false}
                                                          type="text"
                                                          value="Some ingredient 02"
                                                        />
                                                      </div>
                                                    </InputBase>
                                                  </WithFormControlContext(InputBase)>
                                                </WithStyles(WithFormControlContext(InputBase))>
                                              </Input>
                                            </WithStyles(Input)>
                                          </div>
                                        </FormControl>
                                      </WithStyles(FormControl)>
                                    </TextField>
                                  </div>
                                </Grid>
                              </WithStyles(Grid)>
                              <WithStyles(Grid)
                                item={true}
                                sm={2}
                                xs={12}
                              >
                                <Grid
                                  alignContent="stretch"
                                  alignItems="stretch"
                                  classes={
                                    Object {
                                      "align-content-xs-center": "MuiGrid-align-content-xs-center-132",
                                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-134",
                                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-133",
                                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-136",
                                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-135",
                                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-131",
                                      "align-items-xs-center": "MuiGrid-align-items-xs-center-128",
                                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-130",
                                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-129",
                                      "container": "MuiGrid-container-120",
                                      "direction-xs-column": "MuiGrid-direction-xs-column-123",
                                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-124",
                                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-125",
                                      "grid-lg-1": "MuiGrid-grid-lg-1-191",
                                      "grid-lg-10": "MuiGrid-grid-lg-10-200",
                                      "grid-lg-11": "MuiGrid-grid-lg-11-201",
                                      "grid-lg-12": "MuiGrid-grid-lg-12-202",
                                      "grid-lg-2": "MuiGrid-grid-lg-2-192",
                                      "grid-lg-3": "MuiGrid-grid-lg-3-193",
                                      "grid-lg-4": "MuiGrid-grid-lg-4-194",
                                      "grid-lg-5": "MuiGrid-grid-lg-5-195",
                                      "grid-lg-6": "MuiGrid-grid-lg-6-196",
                                      "grid-lg-7": "MuiGrid-grid-lg-7-197",
                                      "grid-lg-8": "MuiGrid-grid-lg-8-198",
                                      "grid-lg-9": "MuiGrid-grid-lg-9-199",
                                      "grid-lg-auto": "MuiGrid-grid-lg-auto-189",
                                      "grid-lg-true": "MuiGrid-grid-lg-true-190",
                                      "grid-md-1": "MuiGrid-grid-md-1-177",
                                      "grid-md-10": "MuiGrid-grid-md-10-186",
                                      "grid-md-11": "MuiGrid-grid-md-11-187",
                                      "grid-md-12": "MuiGrid-grid-md-12-188",
                                      "grid-md-2": "MuiGrid-grid-md-2-178",
                                      "grid-md-3": "MuiGrid-grid-md-3-179",
                                      "grid-md-4": "MuiGrid-grid-md-4-180",
                                      "grid-md-5": "MuiGrid-grid-md-5-181",
                                      "grid-md-6": "MuiGrid-grid-md-6-182",
                                      "grid-md-7": "MuiGrid-grid-md-7-183",
                                      "grid-md-8": "MuiGrid-grid-md-8-184",
                                      "grid-md-9": "MuiGrid-grid-md-9-185",
                                      "grid-md-auto": "MuiGrid-grid-md-auto-175",
                                      "grid-md-true": "MuiGrid-grid-md-true-176",
                                      "grid-sm-1": "MuiGrid-grid-sm-1-163",
                                      "grid-sm-10": "MuiGrid-grid-sm-10-172",
                                      "grid-sm-11": "MuiGrid-grid-sm-11-173",
                                      "grid-sm-12": "MuiGrid-grid-sm-12-174",
                                      "grid-sm-2": "MuiGrid-grid-sm-2-164",
                                      "grid-sm-3": "MuiGrid-grid-sm-3-165",
                                      "grid-sm-4": "MuiGrid-grid-sm-4-166",
                                      "grid-sm-5": "MuiGrid-grid-sm-5-167",
                                      "grid-sm-6": "MuiGrid-grid-sm-6-168",
                                      "grid-sm-7": "MuiGrid-grid-sm-7-169",
                                      "grid-sm-8": "MuiGrid-grid-sm-8-170",
                                      "grid-sm-9": "MuiGrid-grid-sm-9-171",
                                      "grid-sm-auto": "MuiGrid-grid-sm-auto-161",
                                      "grid-sm-true": "MuiGrid-grid-sm-true-162",
                                      "grid-xl-1": "MuiGrid-grid-xl-1-205",
                                      "grid-xl-10": "MuiGrid-grid-xl-10-214",
                                      "grid-xl-11": "MuiGrid-grid-xl-11-215",
                                      "grid-xl-12": "MuiGrid-grid-xl-12-216",
                                      "grid-xl-2": "MuiGrid-grid-xl-2-206",
                                      "grid-xl-3": "MuiGrid-grid-xl-3-207",
                                      "grid-xl-4": "MuiGrid-grid-xl-4-208",
                                      "grid-xl-5": "MuiGrid-grid-xl-5-209",
                                      "grid-xl-6": "MuiGrid-grid-xl-6-210",
                                      "grid-xl-7": "MuiGrid-grid-xl-7-211",
                                      "grid-xl-8": "MuiGrid-grid-xl-8-212",
                                      "grid-xl-9": "MuiGrid-grid-xl-9-213",
                                      "grid-xl-auto": "MuiGrid-grid-xl-auto-203",
                                      "grid-xl-true": "MuiGrid-grid-xl-true-204",
                                      "grid-xs-1": "MuiGrid-grid-xs-1-149",
                                      "grid-xs-10": "MuiGrid-grid-xs-10-158",
                                      "grid-xs-11": "MuiGrid-grid-xs-11-159",
                                      "grid-xs-12": "MuiGrid-grid-xs-12-160",
                                      "grid-xs-2": "MuiGrid-grid-xs-2-150",
                                      "grid-xs-3": "MuiGrid-grid-xs-3-151",
                                      "grid-xs-4": "MuiGrid-grid-xs-4-152",
                                      "grid-xs-5": "MuiGrid-grid-xs-5-153",
                                      "grid-xs-6": "MuiGrid-grid-xs-6-154",
                                      "grid-xs-7": "MuiGrid-grid-xs-7-155",
                                      "grid-xs-8": "MuiGrid-grid-xs-8-156",
                                      "grid-xs-9": "MuiGrid-grid-xs-9-157",
                                      "grid-xs-auto": "MuiGrid-grid-xs-auto-147",
                                      "grid-xs-true": "MuiGrid-grid-xs-true-148",
                                      "item": "MuiGrid-item-121",
                                      "justify-xs-center": "MuiGrid-justify-xs-center-137",
                                      "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-138",
                                      "justify-xs-space-around": "MuiGrid-justify-xs-space-around-140",
                                      "justify-xs-space-between": "MuiGrid-justify-xs-space-between-139",
                                      "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-141",
                                      "spacing-xs-16": "MuiGrid-spacing-xs-16-143",
                                      "spacing-xs-24": "MuiGrid-spacing-xs-24-144",
                                      "spacing-xs-32": "MuiGrid-spacing-xs-32-145",
                                      "spacing-xs-40": "MuiGrid-spacing-xs-40-146",
                                      "spacing-xs-8": "MuiGrid-spacing-xs-8-142",
                                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-126",
                                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-127",
                                      "zeroMinWidth": "MuiGrid-zeroMinWidth-122",
                                    }
                                  }
                                  component="div"
                                  container={false}
                                  direction="row"
                                  item={true}
                                  justify="flex-start"
                                  lg={false}
                                  md={false}
                                  sm={2}
                                  spacing={0}
                                  wrap="wrap"
                                  xl={false}
                                  xs={12}
                                  zeroMinWidth={false}
                                >
                                  <div
                                    className="MuiGrid-item-121 MuiGrid-grid-xs-12-160 MuiGrid-grid-sm-2-164"
                                  >
                                    <WithStyles(Grid)
                                      container={true}
                                      justify="center"
                                    >
                                      <Grid
                                        alignContent="stretch"
                                        alignItems="stretch"
                                        classes={
                                          Object {
                                            "align-content-xs-center": "MuiGrid-align-content-xs-center-132",
                                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-134",
                                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-133",
                                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-136",
                                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-135",
                                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-131",
                                            "align-items-xs-center": "MuiGrid-align-items-xs-center-128",
                                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-130",
                                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-129",
                                            "container": "MuiGrid-container-120",
                                            "direction-xs-column": "MuiGrid-direction-xs-column-123",
                                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-124",
                                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-125",
                                            "grid-lg-1": "MuiGrid-grid-lg-1-191",
                                            "grid-lg-10": "MuiGrid-grid-lg-10-200",
                                            "grid-lg-11": "MuiGrid-grid-lg-11-201",
                                            "grid-lg-12": "MuiGrid-grid-lg-12-202",
                                            "grid-lg-2": "MuiGrid-grid-lg-2-192",
                                            "grid-lg-3": "MuiGrid-grid-lg-3-193",
                                            "grid-lg-4": "MuiGrid-grid-lg-4-194",
                                            "grid-lg-5": "MuiGrid-grid-lg-5-195",
                                            "grid-lg-6": "MuiGrid-grid-lg-6-196",
                                            "grid-lg-7": "MuiGrid-grid-lg-7-197",
                                            "grid-lg-8": "MuiGrid-grid-lg-8-198",
                                            "grid-lg-9": "MuiGrid-grid-lg-9-199",
                                            "grid-lg-auto": "MuiGrid-grid-lg-auto-189",
                                            "grid-lg-true": "MuiGrid-grid-lg-true-190",
                                            "grid-md-1": "MuiGrid-grid-md-1-177",
                                            "grid-md-10": "MuiGrid-grid-md-10-186",
                                            "grid-md-11": "MuiGrid-grid-md-11-187",
                                            "grid-md-12": "MuiGrid-grid-md-12-188",
                                            "grid-md-2": "MuiGrid-grid-md-2-178",
                                            "grid-md-3": "MuiGrid-grid-md-3-179",
                                            "grid-md-4": "MuiGrid-grid-md-4-180",
                                            "grid-md-5": "MuiGrid-grid-md-5-181",
                                            "grid-md-6": "MuiGrid-grid-md-6-182",
                                            "grid-md-7": "MuiGrid-grid-md-7-183",
                                            "grid-md-8": "MuiGrid-grid-md-8-184",
                                            "grid-md-9": "MuiGrid-grid-md-9-185",
                                            "grid-md-auto": "MuiGrid-grid-md-auto-175",
                                            "grid-md-true": "MuiGrid-grid-md-true-176",
                                            "grid-sm-1": "MuiGrid-grid-sm-1-163",
                                            "grid-sm-10": "MuiGrid-grid-sm-10-172",
                                            "grid-sm-11": "MuiGrid-grid-sm-11-173",
                                            "grid-sm-12": "MuiGrid-grid-sm-12-174",
                                            "grid-sm-2": "MuiGrid-grid-sm-2-164",
                                            "grid-sm-3": "MuiGrid-grid-sm-3-165",
                                            "grid-sm-4": "MuiGrid-grid-sm-4-166",
                                            "grid-sm-5": "MuiGrid-grid-sm-5-167",
                                            "grid-sm-6": "MuiGrid-grid-sm-6-168",
                                            "grid-sm-7": "MuiGrid-grid-sm-7-169",
                                            "grid-sm-8": "MuiGrid-grid-sm-8-170",
                                            "grid-sm-9": "MuiGrid-grid-sm-9-171",
                                            "grid-sm-auto": "MuiGrid-grid-sm-auto-161",
                                            "grid-sm-true": "MuiGrid-grid-sm-true-162",
                                            "grid-xl-1": "MuiGrid-grid-xl-1-205",
                                            "grid-xl-10": "MuiGrid-grid-xl-10-214",
                                            "grid-xl-11": "MuiGrid-grid-xl-11-215",
                                            "grid-xl-12": "MuiGrid-grid-xl-12-216",
                                            "grid-xl-2": "MuiGrid-grid-xl-2-206",
                                            "grid-xl-3": "MuiGrid-grid-xl-3-207",
                                            "grid-xl-4": "MuiGrid-grid-xl-4-208",
                                            "grid-xl-5": "MuiGrid-grid-xl-5-209",
                                            "grid-xl-6": "MuiGrid-grid-xl-6-210",
                                            "grid-xl-7": "MuiGrid-grid-xl-7-211",
                                            "grid-xl-8": "MuiGrid-grid-xl-8-212",
                                            "grid-xl-9": "MuiGrid-grid-xl-9-213",
                                            "grid-xl-auto": "MuiGrid-grid-xl-auto-203",
                                            "grid-xl-true": "MuiGrid-grid-xl-true-204",
                                            "grid-xs-1": "MuiGrid-grid-xs-1-149",
                                            "grid-xs-10": "MuiGrid-grid-xs-10-158",
                                            "grid-xs-11": "MuiGrid-grid-xs-11-159",
                                            "grid-xs-12": "MuiGrid-grid-xs-12-160",
                                            "grid-xs-2": "MuiGrid-grid-xs-2-150",
                                            "grid-xs-3": "MuiGrid-grid-xs-3-151",
                                            "grid-xs-4": "MuiGrid-grid-xs-4-152",
                                            "grid-xs-5": "MuiGrid-grid-xs-5-153",
                                            "grid-xs-6": "MuiGrid-grid-xs-6-154",
                                            "grid-xs-7": "MuiGrid-grid-xs-7-155",
                                            "grid-xs-8": "MuiGrid-grid-xs-8-156",
                                            "grid-xs-9": "MuiGrid-grid-xs-9-157",
                                            "grid-xs-auto": "MuiGrid-grid-xs-auto-147",
                                            "grid-xs-true": "MuiGrid-grid-xs-true-148",
                                            "item": "MuiGrid-item-121",
                                            "justify-xs-center": "MuiGrid-justify-xs-center-137",
                                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-138",
                                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around-140",
                                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between-139",
                                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-141",
                                            "spacing-xs-16": "MuiGrid-spacing-xs-16-143",
                                            "spacing-xs-24": "MuiGrid-spacing-xs-24-144",
                                            "spacing-xs-32": "MuiGrid-spacing-xs-32-145",
                                            "spacing-xs-40": "MuiGrid-spacing-xs-40-146",
                                            "spacing-xs-8": "MuiGrid-spacing-xs-8-142",
                                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-126",
                                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-127",
                                            "zeroMinWidth": "MuiGrid-zeroMinWidth-122",
                                          }
                                        }
                                        component="div"
                                        container={true}
                                        direction="row"
                                        item={false}
                                        justify="center"
                                        lg={false}
                                        md={false}
                                        sm={false}
                                        spacing={0}
                                        wrap="wrap"
                                        xl={false}
                                        xs={false}
                                        zeroMinWidth={false}
                                      >
                                        <div
                                          className="MuiGrid-container-120 MuiGrid-justify-xs-center-137"
                                        >
                                          <WithStyles(IconButton)
                                            onClick={[Function]}
                                            tabIndex="-1"
                                          >
                                            <IconButton
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiIconButton-colorInherit-218",
                                                  "colorPrimary": "MuiIconButton-colorPrimary-219",
                                                  "colorSecondary": "MuiIconButton-colorSecondary-220",
                                                  "disabled": "MuiIconButton-disabled-221",
                                                  "label": "MuiIconButton-label-222",
                                                  "root": "MuiIconButton-root-217",
                                                }
                                              }
                                              color="default"
                                              disabled={false}
                                              onClick={[Function]}
                                              tabIndex="-1"
                                            >
                                              <WithStyles(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root-217"
                                                disabled={false}
                                                focusRipple={true}
                                                onClick={[Function]}
                                                tabIndex="-1"
                                              >
                                                <ButtonBase
                                                  centerRipple={true}
                                                  className="MuiIconButton-root-217"
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiButtonBase-disabled-224",
                                                      "focusVisible": "MuiButtonBase-focusVisible-225",
                                                      "root": "MuiButtonBase-root-223",
                                                    }
                                                  }
                                                  component="button"
                                                  disableRipple={false}
                                                  disableTouchRipple={false}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  onClick={[Function]}
                                                  tabIndex="-1"
                                                  type="button"
                                                >
                                                  <button
                                                    className="MuiButtonBase-root-223 MuiIconButton-root-217"
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onContextMenu={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    tabIndex="-1"
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiIconButton-label-222"
                                                    >
                                                      <pure(DeleteIcon)>
                                                        <DeleteIcon>
                                                          <WithStyles(SvgIcon)>
                                                            <SvgIcon
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction-229",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-231",
                                                                  "colorError": "MuiSvgIcon-colorError-230",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-227",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-228",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-232",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-234",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-233",
                                                                  "root": "MuiSvgIcon-root-226",
                                                                }
                                                              }
                                                              color="inherit"
                                                              component="svg"
                                                              fontSize="default"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                className="MuiSvgIcon-root-226"
                                                                focusable="false"
                                                                role="presentation"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                                                />
                                                                <path
                                                                  d="M0 0h24v24H0z"
                                                                  fill="none"
                                                                />
                                                              </svg>
                                                            </SvgIcon>
                                                          </WithStyles(SvgIcon)>
                                                        </DeleteIcon>
                                                      </pure(DeleteIcon)>
                                                    </span>
                                                    <NoSsr
                                                      defer={false}
                                                      fallback={null}
                                                    >
                                                      <WithStyles(TouchRipple)
                                                        center={true}
                                                        innerRef={[Function]}
                                                      >
                                                        <TouchRipple
                                                          center={true}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child-280",
                                                              "childLeaving": "MuiTouchRipple-childLeaving-281",
                                                              "childPulsate": "MuiTouchRipple-childPulsate-282",
                                                              "ripple": "MuiTouchRipple-ripple-277",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate-279",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible-278",
                                                              "root": "MuiTouchRipple-root-276",
                                                            }
                                                          }
                                                        >
                                                          <TransitionGroup
                                                            childFactory={[Function]}
                                                            className="MuiTouchRipple-root-276"
                                                            component="span"
                                                            enter={true}
                                                            exit={true}
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root-276"
                                                            />
                                                          </TransitionGroup>
                                                        </TouchRipple>
                                                      </WithStyles(TouchRipple)>
                                                    </NoSsr>
                                                  </button>
                                                </ButtonBase>
                                              </WithStyles(ButtonBase)>
                                            </IconButton>
                                          </WithStyles(IconButton)>
                                        </div>
                                      </Grid>
                                    </WithStyles(Grid)>
                                  </div>
                                </Grid>
                              </WithStyles(Grid)>
                            </div>
                          </Grid>
                        </WithStyles(Grid)>
                        <div
                          className="MyForm-buttonContainer-3"
                        >
                          <WithStyles(Button)
                            onClick={[Function]}
                            size="small"
                            variant="contained"
                          >
                            <Button
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-256",
                                  "contained": "MuiButton-contained-246",
                                  "containedPrimary": "MuiButton-containedPrimary-247",
                                  "containedSecondary": "MuiButton-containedSecondary-248",
                                  "disabled": "MuiButton-disabled-255",
                                  "extendedFab": "MuiButton-extendedFab-253",
                                  "fab": "MuiButton-fab-252",
                                  "flat": "MuiButton-flat-240",
                                  "flatPrimary": "MuiButton-flatPrimary-241",
                                  "flatSecondary": "MuiButton-flatSecondary-242",
                                  "focusVisible": "MuiButton-focusVisible-254",
                                  "fullWidth": "MuiButton-fullWidth-260",
                                  "label": "MuiButton-label-236",
                                  "mini": "MuiButton-mini-257",
                                  "outlined": "MuiButton-outlined-243",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary-244",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary-245",
                                  "raised": "MuiButton-raised-249",
                                  "raisedPrimary": "MuiButton-raisedPrimary-250",
                                  "raisedSecondary": "MuiButton-raisedSecondary-251",
                                  "root": "MuiButton-root-235",
                                  "sizeLarge": "MuiButton-sizeLarge-259",
                                  "sizeSmall": "MuiButton-sizeSmall-258",
                                  "text": "MuiButton-text-237",
                                  "textPrimary": "MuiButton-textPrimary-238",
                                  "textSecondary": "MuiButton-textSecondary-239",
                                }
                              }
                              color="default"
                              component="button"
                              disableFocusRipple={false}
                              disabled={false}
                              fullWidth={false}
                              mini={false}
                              onClick={[Function]}
                              size="small"
                              type="button"
                              variant="contained"
                            >
                              <WithStyles(ButtonBase)
                                className="MuiButton-root-235 MuiButton-contained-246 MuiButton-raised-249 MuiButton-sizeSmall-258"
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="MuiButton-focusVisible-254"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  centerRipple={false}
                                  className="MuiButton-root-235 MuiButton-contained-246 MuiButton-raised-249 MuiButton-sizeSmall-258"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-224",
                                      "focusVisible": "MuiButtonBase-focusVisible-225",
                                      "root": "MuiButtonBase-root-223",
                                    }
                                  }
                                  component="button"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="MuiButton-focusVisible-254"
                                  onClick={[Function]}
                                  tabIndex="0"
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root-223 MuiButton-root-235 MuiButton-contained-246 MuiButton-raised-249 MuiButton-sizeSmall-258"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex="0"
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-236"
                                    >
                                      More ingredient
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    >
                                      <WithStyles(TouchRipple)
                                        center={false}
                                        innerRef={[Function]}
                                      >
                                        <TouchRipple
                                          center={false}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child-280",
                                              "childLeaving": "MuiTouchRipple-childLeaving-281",
                                              "childPulsate": "MuiTouchRipple-childPulsate-282",
                                              "ripple": "MuiTouchRipple-ripple-277",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate-279",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible-278",
                                              "root": "MuiTouchRipple-root-276",
                                            }
                                          }
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            className="MuiTouchRipple-root-276"
                                            component="span"
                                            enter={true}
                                            exit={true}
                                          >
                                            <span
                                              className="MuiTouchRipple-root-276"
                                            />
                                          </TransitionGroup>
                                        </TouchRipple>
                                      </WithStyles(TouchRipple)>
                                    </NoSsr>
                                  </button>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </Button>
                          </WithStyles(Button)>
                        </div>
                      </div>
                    </Paper>
                  </WithStyles(Paper)>
                  <WithStyles(Paper)
                    className="MyForm-paper-1"
                  >
                    <Paper
                      className="MyForm-paper-1"
                      classes={
                        Object {
                          "elevation0": "MuiPaper-elevation0-7",
                          "elevation1": "MuiPaper-elevation1-8",
                          "elevation10": "MuiPaper-elevation10-17",
                          "elevation11": "MuiPaper-elevation11-18",
                          "elevation12": "MuiPaper-elevation12-19",
                          "elevation13": "MuiPaper-elevation13-20",
                          "elevation14": "MuiPaper-elevation14-21",
                          "elevation15": "MuiPaper-elevation15-22",
                          "elevation16": "MuiPaper-elevation16-23",
                          "elevation17": "MuiPaper-elevation17-24",
                          "elevation18": "MuiPaper-elevation18-25",
                          "elevation19": "MuiPaper-elevation19-26",
                          "elevation2": "MuiPaper-elevation2-9",
                          "elevation20": "MuiPaper-elevation20-27",
                          "elevation21": "MuiPaper-elevation21-28",
                          "elevation22": "MuiPaper-elevation22-29",
                          "elevation23": "MuiPaper-elevation23-30",
                          "elevation24": "MuiPaper-elevation24-31",
                          "elevation3": "MuiPaper-elevation3-10",
                          "elevation4": "MuiPaper-elevation4-11",
                          "elevation5": "MuiPaper-elevation5-12",
                          "elevation6": "MuiPaper-elevation6-13",
                          "elevation7": "MuiPaper-elevation7-14",
                          "elevation8": "MuiPaper-elevation8-15",
                          "elevation9": "MuiPaper-elevation9-16",
                          "root": "MuiPaper-root-5",
                          "rounded": "MuiPaper-rounded-6",
                        }
                      }
                      component="div"
                      elevation={2}
                      square={false}
                    >
                      <div
                        className="MuiPaper-root-5 MuiPaper-elevation2-9 MuiPaper-rounded-6 MyForm-paper-1"
                      >
                        <WithStyles(Typography)
                          component="h2"
                          variant="h5"
                        >
                          <Typography
                            align="inherit"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter-55",
                                "alignJustify": "MuiTypography-alignJustify-57",
                                "alignLeft": "MuiTypography-alignLeft-54",
                                "alignRight": "MuiTypography-alignRight-56",
                                "body1": "MuiTypography-body1-41",
                                "body2": "MuiTypography-body2-40",
                                "button": "MuiTypography-button-43",
                                "caption": "MuiTypography-caption-42",
                                "colorError": "MuiTypography-colorError-66",
                                "colorInherit": "MuiTypography-colorInherit-61",
                                "colorPrimary": "MuiTypography-colorPrimary-62",
                                "colorSecondary": "MuiTypography-colorSecondary-63",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary-64",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary-65",
                                "display1": "MuiTypography-display1-36",
                                "display2": "MuiTypography-display2-35",
                                "display3": "MuiTypography-display3-34",
                                "display4": "MuiTypography-display4-33",
                                "gutterBottom": "MuiTypography-gutterBottom-59",
                                "h1": "MuiTypography-h1-44",
                                "h2": "MuiTypography-h2-45",
                                "h3": "MuiTypography-h3-46",
                                "h4": "MuiTypography-h4-47",
                                "h5": "MuiTypography-h5-48",
                                "h6": "MuiTypography-h6-49",
                                "headline": "MuiTypography-headline-37",
                                "inline": "MuiTypography-inline-67",
                                "noWrap": "MuiTypography-noWrap-58",
                                "overline": "MuiTypography-overline-52",
                                "paragraph": "MuiTypography-paragraph-60",
                                "root": "MuiTypography-root-32",
                                "srOnly": "MuiTypography-srOnly-53",
                                "subheading": "MuiTypography-subheading-39",
                                "subtitle1": "MuiTypography-subtitle1-50",
                                "subtitle2": "MuiTypography-subtitle2-51",
                                "title": "MuiTypography-title-38",
                              }
                            }
                            color="default"
                            component="h2"
                            gutterBottom={false}
                            headlineMapping={
                              Object {
                                "body1": "p",
                                "body2": "p",
                                "display1": "h1",
                                "display2": "h1",
                                "display3": "h1",
                                "display4": "h1",
                                "h1": "h1",
                                "h2": "h2",
                                "h3": "h3",
                                "h4": "h4",
                                "h5": "h5",
                                "h6": "h6",
                                "headline": "h1",
                                "subheading": "h3",
                                "subtitle1": "h6",
                                "subtitle2": "h6",
                                "title": "h2",
                              }
                            }
                            inline={false}
                            noWrap={false}
                            paragraph={false}
                            theme={
                              Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "hover": "rgba(0, 0, 0, 0.08)",
                                    "hoverOpacity": 0.08,
                                    "selected": "rgba(0, 0, 0, 0.14)",
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "danger": Object {
                                    "main": "#c62828",
                                  },
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                    "dark": "#c67100",
                                    "light": "#ffd149",
                                    "main": "#ffa000",
                                  },
                                  "secondary": Object {
                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                    "dark": "#4b830d",
                                    "light": "#aee571",
                                    "main": "#7cb342",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                  "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                  "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": Object {
                                  "unit": 8,
                                },
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body1Next": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2Next": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.5,
                                  },
                                  "button": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "buttonNext": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "captionNext": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "display1": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.20588em",
                                  },
                                  "display2": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.8125rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.13333em",
                                    "marginLeft": "-.02em",
                                  },
                                  "display3": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "-.02em",
                                    "lineHeight": "1.30357em",
                                    "marginLeft": "-.02em",
                                  },
                                  "display4": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "7rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-.04em",
                                    "lineHeight": "1.14286em",
                                    "marginLeft": "-.04em",
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1,
                                  },
                                  "h2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1,
                                  },
                                  "h3": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.04,
                                  },
                                  "h4": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.17,
                                  },
                                  "h5": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.33,
                                  },
                                  "h6": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "headline": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.35417em",
                                  },
                                  "overline": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subheading": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.5em",
                                  },
                                  "subtitle1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                  "title": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.3125rem",
                                    "fontWeight": 500,
                                    "lineHeight": "1.16667em",
                                  },
                                  "useNextVariants": true,
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "tooltip": 1500,
                                },
                              }
                            }
                            variant="h5"
                          >
                            <h2
                              className="MuiTypography-root-32 MuiTypography-h5-48"
                            >
                              Direction:
                            </h2>
                          </Typography>
                        </WithStyles(Typography)>
                        <TextField
                          fullWidth={true}
                          label="Direction"
                          multiline={true}
                          name="direction"
                          onBlur={[Function]}
                          onChange={[Function]}
                          required={false}
                          rows="10"
                          select={false}
                          value="You need to make something"
                          variant="outlined"
                        >
                          <WithStyles(FormControl)
                            fullWidth={true}
                            required={false}
                            variant="outlined"
                          >
                            <FormControl
                              classes={
                                Object {
                                  "fullWidth": "MuiFormControl-fullWidth-71",
                                  "marginDense": "MuiFormControl-marginDense-70",
                                  "marginNormal": "MuiFormControl-marginNormal-69",
                                  "root": "MuiFormControl-root-68",
                                }
                              }
                              component="div"
                              disabled={false}
                              error={false}
                              fullWidth={true}
                              margin="none"
                              required={false}
                              variant="outlined"
                            >
                              <div
                                className="MuiFormControl-root-68 MuiFormControl-fullWidth-71"
                              >
                                <WithStyles(WithFormControlContext(InputLabel))>
                                  <WithFormControlContext(InputLabel)
                                    classes={
                                      Object {
                                        "animated": "MuiInputLabel-animated-80",
                                        "disabled": "MuiInputLabel-disabled-74",
                                        "error": "MuiInputLabel-error-75",
                                        "filled": "MuiInputLabel-filled-81",
                                        "focused": "MuiInputLabel-focused-73",
                                        "formControl": "MuiInputLabel-formControl-77",
                                        "marginDense": "MuiInputLabel-marginDense-78",
                                        "outlined": "MuiInputLabel-outlined-82",
                                        "required": "MuiInputLabel-required-76",
                                        "root": "MuiInputLabel-root-72",
                                        "shrink": "MuiInputLabel-shrink-79",
                                      }
                                    }
                                  >
                                    <InputLabel
                                      classes={
                                        Object {
                                          "animated": "MuiInputLabel-animated-80",
                                          "disabled": "MuiInputLabel-disabled-74",
                                          "error": "MuiInputLabel-error-75",
                                          "filled": "MuiInputLabel-filled-81",
                                          "focused": "MuiInputLabel-focused-73",
                                          "formControl": "MuiInputLabel-formControl-77",
                                          "marginDense": "MuiInputLabel-marginDense-78",
                                          "outlined": "MuiInputLabel-outlined-82",
                                          "required": "MuiInputLabel-required-76",
                                          "root": "MuiInputLabel-root-72",
                                          "shrink": "MuiInputLabel-shrink-79",
                                        }
                                      }
                                      disableAnimation={false}
                                      muiFormControl={
                                        Object {
                                          "adornedStart": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": true,
                                          "focused": false,
                                          "margin": "none",
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "required": false,
                                          "variant": "outlined",
                                        }
                                      }
                                    >
                                      <WithStyles(WithFormControlContext(FormLabel))
                                        className="MuiInputLabel-root-72 MuiInputLabel-formControl-77 MuiInputLabel-animated-80 MuiInputLabel-shrink-79 MuiInputLabel-outlined-82"
                                        classes={
                                          Object {
                                            "disabled": "MuiInputLabel-disabled-74",
                                            "error": "MuiInputLabel-error-75",
                                            "focused": "MuiInputLabel-focused-73",
                                            "required": "MuiInputLabel-required-76",
                                          }
                                        }
                                        data-shrink={true}
                                      >
                                        <WithFormControlContext(FormLabel)
                                          className="MuiInputLabel-root-72 MuiInputLabel-formControl-77 MuiInputLabel-animated-80 MuiInputLabel-shrink-79 MuiInputLabel-outlined-82"
                                          classes={
                                            Object {
                                              "asterisk": "MuiFormLabel-asterisk-89",
                                              "disabled": "MuiFormLabel-disabled-85 MuiInputLabel-disabled-74",
                                              "error": "MuiFormLabel-error-86 MuiInputLabel-error-75",
                                              "filled": "MuiFormLabel-filled-87",
                                              "focused": "MuiFormLabel-focused-84 MuiInputLabel-focused-73",
                                              "required": "MuiFormLabel-required-88 MuiInputLabel-required-76",
                                              "root": "MuiFormLabel-root-83",
                                            }
                                          }
                                          data-shrink={true}
                                        >
                                          <FormLabel
                                            className="MuiInputLabel-root-72 MuiInputLabel-formControl-77 MuiInputLabel-animated-80 MuiInputLabel-shrink-79 MuiInputLabel-outlined-82"
                                            classes={
                                              Object {
                                                "asterisk": "MuiFormLabel-asterisk-89",
                                                "disabled": "MuiFormLabel-disabled-85 MuiInputLabel-disabled-74",
                                                "error": "MuiFormLabel-error-86 MuiInputLabel-error-75",
                                                "filled": "MuiFormLabel-filled-87",
                                                "focused": "MuiFormLabel-focused-84 MuiInputLabel-focused-73",
                                                "required": "MuiFormLabel-required-88 MuiInputLabel-required-76",
                                                "root": "MuiFormLabel-root-83",
                                              }
                                            }
                                            component="label"
                                            data-shrink={true}
                                            muiFormControl={
                                              Object {
                                                "adornedStart": false,
                                                "disabled": false,
                                                "error": false,
                                                "filled": true,
                                                "focused": false,
                                                "margin": "none",
                                                "onBlur": [Function],
                                                "onEmpty": [Function],
                                                "onFilled": [Function],
                                                "onFocus": [Function],
                                                "required": false,
                                                "variant": "outlined",
                                              }
                                            }
                                          >
                                            <label
                                              className="MuiFormLabel-root-83 MuiFormLabel-filled-87 MuiInputLabel-root-72 MuiInputLabel-formControl-77 MuiInputLabel-animated-80 MuiInputLabel-shrink-79 MuiInputLabel-outlined-82"
                                              data-shrink={true}
                                            >
                                              Direction
                                            </label>
                                          </FormLabel>
                                        </WithFormControlContext(FormLabel)>
                                      </WithStyles(WithFormControlContext(FormLabel))>
                                    </InputLabel>
                                  </WithFormControlContext(InputLabel)>
                                </WithStyles(WithFormControlContext(InputLabel))>
                                <WithStyles(OutlinedInput)
                                  fullWidth={true}
                                  labelWidth={0}
                                  multiline={true}
                                  name="direction"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  rows="10"
                                  value="You need to make something"
                                >
                                  <OutlinedInput
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiOutlinedInput-adornedEnd-265",
                                        "adornedStart": "MuiOutlinedInput-adornedStart-264",
                                        "disabled": "MuiOutlinedInput-disabled-263",
                                        "error": "MuiOutlinedInput-error-266",
                                        "focused": "MuiOutlinedInput-focused-262",
                                        "input": "MuiOutlinedInput-input-269",
                                        "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd-273",
                                        "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart-272",
                                        "inputMarginDense": "MuiOutlinedInput-inputMarginDense-270",
                                        "inputMultiline": "MuiOutlinedInput-inputMultiline-271",
                                        "multiline": "MuiOutlinedInput-multiline-267",
                                        "notchedOutline": "MuiOutlinedInput-notchedOutline-268",
                                        "root": "MuiOutlinedInput-root-261",
                                      }
                                    }
                                    fullWidth={true}
                                    labelWidth={0}
                                    multiline={true}
                                    name="direction"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    rows="10"
                                    value="You need to make something"
                                  >
                                    <WithStyles(WithFormControlContext(InputBase))
                                      classes={
                                        Object {
                                          "adornedEnd": "MuiOutlinedInput-adornedEnd-265",
                                          "adornedStart": "MuiOutlinedInput-adornedStart-264",
                                          "disabled": "MuiOutlinedInput-disabled-263",
                                          "error": "MuiOutlinedInput-error-266",
                                          "focused": "MuiOutlinedInput-focused-262",
                                          "input": "MuiOutlinedInput-input-269",
                                          "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd-273",
                                          "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart-272",
                                          "inputMarginDense": "MuiOutlinedInput-inputMarginDense-270",
                                          "inputMultiline": "MuiOutlinedInput-inputMultiline-271",
                                          "multiline": "MuiOutlinedInput-multiline-267",
                                          "notchedOutline": null,
                                          "root": "MuiOutlinedInput-root-261",
                                        }
                                      }
                                      fullWidth={true}
                                      inputComponent="input"
                                      multiline={true}
                                      name="direction"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      renderPrefix={[Function]}
                                      rows="10"
                                      type="text"
                                      value="You need to make something"
                                    >
                                      <WithFormControlContext(InputBase)
                                        classes={
                                          Object {
                                            "adornedEnd": "MuiInputBase-adornedEnd-108 MuiOutlinedInput-adornedEnd-265",
                                            "adornedStart": "MuiInputBase-adornedStart-107 MuiOutlinedInput-adornedStart-264",
                                            "disabled": "MuiInputBase-disabled-106 MuiOutlinedInput-disabled-263",
                                            "error": "MuiInputBase-error-109 MuiOutlinedInput-error-266",
                                            "focused": "MuiInputBase-focused-105 MuiOutlinedInput-focused-262",
                                            "formControl": "MuiInputBase-formControl-104",
                                            "fullWidth": "MuiInputBase-fullWidth-112",
                                            "input": "MuiInputBase-input-113 MuiOutlinedInput-input-269",
                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-119 MuiOutlinedInput-inputAdornedEnd-273",
                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart-118 MuiOutlinedInput-inputAdornedStart-272",
                                            "inputMarginDense": "MuiInputBase-inputMarginDense-114 MuiOutlinedInput-inputMarginDense-270",
                                            "inputMultiline": "MuiInputBase-inputMultiline-115 MuiOutlinedInput-inputMultiline-271",
                                            "inputType": "MuiInputBase-inputType-116",
                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch-117",
                                            "marginDense": "MuiInputBase-marginDense-110",
                                            "multiline": "MuiInputBase-multiline-111 MuiOutlinedInput-multiline-267",
                                            "root": "MuiInputBase-root-103 MuiOutlinedInput-root-261",
                                          }
                                        }
                                        fullWidth={true}
                                        inputComponent="input"
                                        multiline={true}
                                        name="direction"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        renderPrefix={[Function]}
                                        rows="10"
                                        type="text"
                                        value="You need to make something"
                                      >
                                        <InputBase
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiInputBase-adornedEnd-108 MuiOutlinedInput-adornedEnd-265",
                                              "adornedStart": "MuiInputBase-adornedStart-107 MuiOutlinedInput-adornedStart-264",
                                              "disabled": "MuiInputBase-disabled-106 MuiOutlinedInput-disabled-263",
                                              "error": "MuiInputBase-error-109 MuiOutlinedInput-error-266",
                                              "focused": "MuiInputBase-focused-105 MuiOutlinedInput-focused-262",
                                              "formControl": "MuiInputBase-formControl-104",
                                              "fullWidth": "MuiInputBase-fullWidth-112",
                                              "input": "MuiInputBase-input-113 MuiOutlinedInput-input-269",
                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-119 MuiOutlinedInput-inputAdornedEnd-273",
                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart-118 MuiOutlinedInput-inputAdornedStart-272",
                                              "inputMarginDense": "MuiInputBase-inputMarginDense-114 MuiOutlinedInput-inputMarginDense-270",
                                              "inputMultiline": "MuiInputBase-inputMultiline-115 MuiOutlinedInput-inputMultiline-271",
                                              "inputType": "MuiInputBase-inputType-116",
                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch-117",
                                              "marginDense": "MuiInputBase-marginDense-110",
                                              "multiline": "MuiInputBase-multiline-111 MuiOutlinedInput-multiline-267",
                                              "root": "MuiInputBase-root-103 MuiOutlinedInput-root-261",
                                            }
                                          }
                                          fullWidth={true}
                                          inputComponent="input"
                                          muiFormControl={
                                            Object {
                                              "adornedStart": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": true,
                                              "focused": false,
                                              "margin": "none",
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "required": false,
                                              "variant": "outlined",
                                            }
                                          }
                                          multiline={true}
                                          name="direction"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          renderPrefix={[Function]}
                                          rows="10"
                                          type="text"
                                          value="You need to make something"
                                        >
                                          <div
                                            className="MuiInputBase-root-103 MuiOutlinedInput-root-261 MuiInputBase-fullWidth-112 MuiInputBase-formControl-104 MuiInputBase-multiline-111 MuiOutlinedInput-multiline-267"
                                            onClick={[Function]}
                                          >
                                            <WithStyles(NotchedOutline)
                                              className="MuiOutlinedInput-notchedOutline-268"
                                              labelWidth={0}
                                              notched={true}
                                            >
                                              <NotchedOutline
                                                className="MuiOutlinedInput-notchedOutline-268"
                                                classes={
                                                  Object {
                                                    "legend": "MuiPrivateNotchedOutline-legend-275",
                                                    "root": "MuiPrivateNotchedOutline-root-274",
                                                  }
                                                }
                                                labelWidth={0}
                                                notched={true}
                                                theme={
                                                  Object {
                                                    "breakpoints": Object {
                                                      "between": [Function],
                                                      "down": [Function],
                                                      "keys": Array [
                                                        "xs",
                                                        "sm",
                                                        "md",
                                                        "lg",
                                                        "xl",
                                                      ],
                                                      "only": [Function],
                                                      "up": [Function],
                                                      "values": Object {
                                                        "lg": 1280,
                                                        "md": 960,
                                                        "sm": 600,
                                                        "xl": 1920,
                                                        "xs": 0,
                                                      },
                                                      "width": [Function],
                                                    },
                                                    "direction": "ltr",
                                                    "mixins": Object {
                                                      "gutters": [Function],
                                                      "toolbar": Object {
                                                        "@media (min-width:0px) and (orientation: landscape)": Object {
                                                          "minHeight": 48,
                                                        },
                                                        "@media (min-width:600px)": Object {
                                                          "minHeight": 64,
                                                        },
                                                        "minHeight": 56,
                                                      },
                                                    },
                                                    "overrides": Object {},
                                                    "palette": Object {
                                                      "action": Object {
                                                        "active": "rgba(0, 0, 0, 0.54)",
                                                        "disabled": "rgba(0, 0, 0, 0.26)",
                                                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                        "hover": "rgba(0, 0, 0, 0.08)",
                                                        "hoverOpacity": 0.08,
                                                        "selected": "rgba(0, 0, 0, 0.14)",
                                                      },
                                                      "augmentColor": [Function],
                                                      "background": Object {
                                                        "default": "#fafafa",
                                                        "paper": "#fff",
                                                      },
                                                      "common": Object {
                                                        "black": "#000",
                                                        "white": "#fff",
                                                      },
                                                      "contrastThreshold": 3,
                                                      "danger": Object {
                                                        "main": "#c62828",
                                                      },
                                                      "divider": "rgba(0, 0, 0, 0.12)",
                                                      "error": Object {
                                                        "contrastText": "#fff",
                                                        "dark": "#d32f2f",
                                                        "light": "#e57373",
                                                        "main": "#f44336",
                                                      },
                                                      "getContrastText": [Function],
                                                      "grey": Object {
                                                        "100": "#f5f5f5",
                                                        "200": "#eeeeee",
                                                        "300": "#e0e0e0",
                                                        "400": "#bdbdbd",
                                                        "50": "#fafafa",
                                                        "500": "#9e9e9e",
                                                        "600": "#757575",
                                                        "700": "#616161",
                                                        "800": "#424242",
                                                        "900": "#212121",
                                                        "A100": "#d5d5d5",
                                                        "A200": "#aaaaaa",
                                                        "A400": "#303030",
                                                        "A700": "#616161",
                                                      },
                                                      "primary": Object {
                                                        "contrastText": "rgba(0, 0, 0, 0.87)",
                                                        "dark": "#c67100",
                                                        "light": "#ffd149",
                                                        "main": "#ffa000",
                                                      },
                                                      "secondary": Object {
                                                        "contrastText": "rgba(0, 0, 0, 0.87)",
                                                        "dark": "#4b830d",
                                                        "light": "#aee571",
                                                        "main": "#7cb342",
                                                      },
                                                      "text": Object {
                                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                                        "hint": "rgba(0, 0, 0, 0.38)",
                                                        "primary": "rgba(0, 0, 0, 0.87)",
                                                        "secondary": "rgba(0, 0, 0, 0.54)",
                                                      },
                                                      "tonalOffset": 0.2,
                                                      "type": "light",
                                                    },
                                                    "props": Object {},
                                                    "shadows": Array [
                                                      "none",
                                                      "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                      "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                      "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                    ],
                                                    "shape": Object {
                                                      "borderRadius": 4,
                                                    },
                                                    "spacing": Object {
                                                      "unit": 8,
                                                    },
                                                    "transitions": Object {
                                                      "create": [Function],
                                                      "duration": Object {
                                                        "complex": 375,
                                                        "enteringScreen": 225,
                                                        "leavingScreen": 195,
                                                        "short": 250,
                                                        "shorter": 200,
                                                        "shortest": 150,
                                                        "standard": 300,
                                                      },
                                                      "easing": Object {
                                                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                      },
                                                      "getAutoHeightDuration": [Function],
                                                    },
                                                    "typography": Object {
                                                      "body1": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "1rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.00938em",
                                                        "lineHeight": 1.5,
                                                      },
                                                      "body1Next": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "1rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.00938em",
                                                        "lineHeight": 1.5,
                                                      },
                                                      "body2": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.875rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.01071em",
                                                        "lineHeight": 1.5,
                                                      },
                                                      "body2Next": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.875rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.01071em",
                                                        "lineHeight": 1.5,
                                                      },
                                                      "button": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.875rem",
                                                        "fontWeight": 500,
                                                        "letterSpacing": "0.02857em",
                                                        "lineHeight": 1.75,
                                                        "textTransform": "uppercase",
                                                      },
                                                      "buttonNext": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.875rem",
                                                        "fontWeight": 500,
                                                        "letterSpacing": "0.02857em",
                                                        "lineHeight": 1.75,
                                                        "textTransform": "uppercase",
                                                      },
                                                      "caption": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.75rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.03333em",
                                                        "lineHeight": 1.66,
                                                      },
                                                      "captionNext": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.75rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.03333em",
                                                        "lineHeight": 1.66,
                                                      },
                                                      "display1": Object {
                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "2.125rem",
                                                        "fontWeight": 400,
                                                        "lineHeight": "1.20588em",
                                                      },
                                                      "display2": Object {
                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "2.8125rem",
                                                        "fontWeight": 400,
                                                        "lineHeight": "1.13333em",
                                                        "marginLeft": "-.02em",
                                                      },
                                                      "display3": Object {
                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "3.5rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "-.02em",
                                                        "lineHeight": "1.30357em",
                                                        "marginLeft": "-.02em",
                                                      },
                                                      "display4": Object {
                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "7rem",
                                                        "fontWeight": 300,
                                                        "letterSpacing": "-.04em",
                                                        "lineHeight": "1.14286em",
                                                        "marginLeft": "-.04em",
                                                      },
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": 14,
                                                      "fontWeightLight": 300,
                                                      "fontWeightMedium": 500,
                                                      "fontWeightRegular": 400,
                                                      "h1": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "6rem",
                                                        "fontWeight": 300,
                                                        "letterSpacing": "-0.01562em",
                                                        "lineHeight": 1,
                                                      },
                                                      "h2": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "3.75rem",
                                                        "fontWeight": 300,
                                                        "letterSpacing": "-0.00833em",
                                                        "lineHeight": 1,
                                                      },
                                                      "h3": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "3rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0em",
                                                        "lineHeight": 1.04,
                                                      },
                                                      "h4": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "2.125rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.00735em",
                                                        "lineHeight": 1.17,
                                                      },
                                                      "h5": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "1.5rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0em",
                                                        "lineHeight": 1.33,
                                                      },
                                                      "h6": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "1.25rem",
                                                        "fontWeight": 500,
                                                        "letterSpacing": "0.0075em",
                                                        "lineHeight": 1.6,
                                                      },
                                                      "headline": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "1.5rem",
                                                        "fontWeight": 400,
                                                        "lineHeight": "1.35417em",
                                                      },
                                                      "overline": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.75rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.08333em",
                                                        "lineHeight": 2.66,
                                                        "textTransform": "uppercase",
                                                      },
                                                      "pxToRem": [Function],
                                                      "round": [Function],
                                                      "subheading": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "1rem",
                                                        "fontWeight": 400,
                                                        "lineHeight": "1.5em",
                                                      },
                                                      "subtitle1": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "1rem",
                                                        "fontWeight": 400,
                                                        "letterSpacing": "0.00938em",
                                                        "lineHeight": 1.75,
                                                      },
                                                      "subtitle2": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "0.875rem",
                                                        "fontWeight": 500,
                                                        "letterSpacing": "0.00714em",
                                                        "lineHeight": 1.57,
                                                      },
                                                      "title": Object {
                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": "1.3125rem",
                                                        "fontWeight": 500,
                                                        "lineHeight": "1.16667em",
                                                      },
                                                      "useNextVariants": true,
                                                    },
                                                    "zIndex": Object {
                                                      "appBar": 1100,
                                                      "drawer": 1200,
                                                      "mobileStepper": 1000,
                                                      "modal": 1300,
                                                      "snackbar": 1400,
                                                      "tooltip": 1500,
                                                    },
                                                  }
                                                }
                                              >
                                                <fieldset
                                                  aria-hidden={true}
                                                  className="MuiPrivateNotchedOutline-root-274 MuiOutlinedInput-notchedOutline-268"
                                                  style={
                                                    Object {
                                                      "paddingLeft": 8,
                                                    }
                                                  }
                                                >
                                                  <legend
                                                    className="MuiPrivateNotchedOutline-legend-275"
                                                    style={
                                                      Object {
                                                        "width": 0,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      dangerouslySetInnerHTML={
                                                        Object {
                                                          "__html": "&#8203;",
                                                        }
                                                      }
                                                    />
                                                  </legend>
                                                </fieldset>
                                              </NotchedOutline>
                                            </WithStyles(NotchedOutline)>
                                            <textarea
                                              aria-invalid={false}
                                              className="MuiInputBase-input-113 MuiOutlinedInput-input-269 MuiInputBase-inputMultiline-115 MuiOutlinedInput-inputMultiline-271"
                                              disabled={false}
                                              name="direction"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              required={false}
                                              rows="10"
                                              value="You need to make something"
                                            />
                                          </div>
                                        </InputBase>
                                      </WithFormControlContext(InputBase)>
                                    </WithStyles(WithFormControlContext(InputBase))>
                                  </OutlinedInput>
                                </WithStyles(OutlinedInput)>
                              </div>
                            </FormControl>
                          </WithStyles(FormControl)>
                        </TextField>
                      </div>
                    </Paper>
                  </WithStyles(Paper)>
                  <div>
                    <WithStyles(Button)
                      className="MyForm-button-2"
                      color="primary"
                      disabled={false}
                      type="Submit"
                      variant="contained"
                    >
                      <Button
                        className="MyForm-button-2"
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit-256",
                            "contained": "MuiButton-contained-246",
                            "containedPrimary": "MuiButton-containedPrimary-247",
                            "containedSecondary": "MuiButton-containedSecondary-248",
                            "disabled": "MuiButton-disabled-255",
                            "extendedFab": "MuiButton-extendedFab-253",
                            "fab": "MuiButton-fab-252",
                            "flat": "MuiButton-flat-240",
                            "flatPrimary": "MuiButton-flatPrimary-241",
                            "flatSecondary": "MuiButton-flatSecondary-242",
                            "focusVisible": "MuiButton-focusVisible-254",
                            "fullWidth": "MuiButton-fullWidth-260",
                            "label": "MuiButton-label-236",
                            "mini": "MuiButton-mini-257",
                            "outlined": "MuiButton-outlined-243",
                            "outlinedPrimary": "MuiButton-outlinedPrimary-244",
                            "outlinedSecondary": "MuiButton-outlinedSecondary-245",
                            "raised": "MuiButton-raised-249",
                            "raisedPrimary": "MuiButton-raisedPrimary-250",
                            "raisedSecondary": "MuiButton-raisedSecondary-251",
                            "root": "MuiButton-root-235",
                            "sizeLarge": "MuiButton-sizeLarge-259",
                            "sizeSmall": "MuiButton-sizeSmall-258",
                            "text": "MuiButton-text-237",
                            "textPrimary": "MuiButton-textPrimary-238",
                            "textSecondary": "MuiButton-textSecondary-239",
                          }
                        }
                        color="primary"
                        component="button"
                        disableFocusRipple={false}
                        disabled={false}
                        fullWidth={false}
                        mini={false}
                        size="medium"
                        type="Submit"
                        variant="contained"
                      >
                        <WithStyles(ButtonBase)
                          className="MuiButton-root-235 MuiButton-contained-246 MuiButton-containedPrimary-247 MuiButton-raised-249 MuiButton-raisedPrimary-250 MyForm-button-2"
                          component="button"
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="MuiButton-focusVisible-254"
                          type="Submit"
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiButton-root-235 MuiButton-contained-246 MuiButton-containedPrimary-247 MuiButton-raised-249 MuiButton-raisedPrimary-250 MyForm-button-2"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-224",
                                "focusVisible": "MuiButtonBase-focusVisible-225",
                                "root": "MuiButtonBase-root-223",
                              }
                            }
                            component="button"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="MuiButton-focusVisible-254"
                            tabIndex="0"
                            type="Submit"
                          >
                            <button
                              className="MuiButtonBase-root-223 MuiButton-root-235 MuiButton-contained-246 MuiButton-containedPrimary-247 MuiButton-raised-249 MuiButton-raisedPrimary-250 MyForm-button-2"
                              disabled={false}
                              onBlur={[Function]}
                              onContextMenu={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex="0"
                              type="Submit"
                            >
                              <span
                                className="MuiButton-label-236"
                              >
                                Save
                              </span>
                              <NoSsr
                                defer={false}
                                fallback={null}
                              >
                                <WithStyles(TouchRipple)
                                  center={false}
                                  innerRef={[Function]}
                                >
                                  <TouchRipple
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child-280",
                                        "childLeaving": "MuiTouchRipple-childLeaving-281",
                                        "childPulsate": "MuiTouchRipple-childPulsate-282",
                                        "ripple": "MuiTouchRipple-ripple-277",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate-279",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible-278",
                                        "root": "MuiTouchRipple-root-276",
                                      }
                                    }
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      className="MuiTouchRipple-root-276"
                                      component="span"
                                      enter={true}
                                      exit={true}
                                    >
                                      <span
                                        className="MuiTouchRipple-root-276"
                                      />
                                    </TransitionGroup>
                                  </TouchRipple>
                                </WithStyles(TouchRipple)>
                              </NoSsr>
                            </button>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </Button>
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      className="MyForm-button-2"
                      color="secondary"
                      component={[Function]}
                      to="/recipes"
                      variant="contained"
                    >
                      <Button
                        className="MyForm-button-2"
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit-256",
                            "contained": "MuiButton-contained-246",
                            "containedPrimary": "MuiButton-containedPrimary-247",
                            "containedSecondary": "MuiButton-containedSecondary-248",
                            "disabled": "MuiButton-disabled-255",
                            "extendedFab": "MuiButton-extendedFab-253",
                            "fab": "MuiButton-fab-252",
                            "flat": "MuiButton-flat-240",
                            "flatPrimary": "MuiButton-flatPrimary-241",
                            "flatSecondary": "MuiButton-flatSecondary-242",
                            "focusVisible": "MuiButton-focusVisible-254",
                            "fullWidth": "MuiButton-fullWidth-260",
                            "label": "MuiButton-label-236",
                            "mini": "MuiButton-mini-257",
                            "outlined": "MuiButton-outlined-243",
                            "outlinedPrimary": "MuiButton-outlinedPrimary-244",
                            "outlinedSecondary": "MuiButton-outlinedSecondary-245",
                            "raised": "MuiButton-raised-249",
                            "raisedPrimary": "MuiButton-raisedPrimary-250",
                            "raisedSecondary": "MuiButton-raisedSecondary-251",
                            "root": "MuiButton-root-235",
                            "sizeLarge": "MuiButton-sizeLarge-259",
                            "sizeSmall": "MuiButton-sizeSmall-258",
                            "text": "MuiButton-text-237",
                            "textPrimary": "MuiButton-textPrimary-238",
                            "textSecondary": "MuiButton-textSecondary-239",
                          }
                        }
                        color="secondary"
                        component={[Function]}
                        disableFocusRipple={false}
                        disabled={false}
                        fullWidth={false}
                        mini={false}
                        size="medium"
                        to="/recipes"
                        type="button"
                        variant="contained"
                      >
                        <WithStyles(ButtonBase)
                          className="MuiButton-root-235 MuiButton-contained-246 MuiButton-containedSecondary-248 MuiButton-raised-249 MuiButton-raisedSecondary-251 MyForm-button-2"
                          component={[Function]}
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="MuiButton-focusVisible-254"
                          to="/recipes"
                          type="button"
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiButton-root-235 MuiButton-contained-246 MuiButton-containedSecondary-248 MuiButton-raised-249 MuiButton-raisedSecondary-251 MyForm-button-2"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-224",
                                "focusVisible": "MuiButtonBase-focusVisible-225",
                                "root": "MuiButtonBase-root-223",
                              }
                            }
                            component={[Function]}
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="MuiButton-focusVisible-254"
                            tabIndex="0"
                            to="/recipes"
                            type="button"
                          >
                            <Link
                              className="MuiButtonBase-root-223 MuiButton-root-235 MuiButton-contained-246 MuiButton-containedSecondary-248 MuiButton-raised-249 MuiButton-raisedSecondary-251 MyForm-button-2"
                              onBlur={[Function]}
                              onContextMenu={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              replace={false}
                              role="button"
                              tabIndex="0"
                              to="/recipes"
                            >
                              <a
                                className="MuiButtonBase-root-223 MuiButton-root-235 MuiButton-contained-246 MuiButton-containedSecondary-248 MuiButton-raised-249 MuiButton-raisedSecondary-251 MyForm-button-2"
                                href="/recipes"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onContextMenu={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                role="button"
                                tabIndex="0"
                              >
                                <span
                                  className="MuiButton-label-236"
                                >
                                  Cancel
                                </span>
                                <NoSsr
                                  defer={false}
                                  fallback={null}
                                >
                                  <WithStyles(TouchRipple)
                                    center={false}
                                    innerRef={[Function]}
                                  >
                                    <TouchRipple
                                      center={false}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child-280",
                                          "childLeaving": "MuiTouchRipple-childLeaving-281",
                                          "childPulsate": "MuiTouchRipple-childPulsate-282",
                                          "ripple": "MuiTouchRipple-ripple-277",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-279",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible-278",
                                          "root": "MuiTouchRipple-root-276",
                                        }
                                      }
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        className="MuiTouchRipple-root-276"
                                        component="span"
                                        enter={true}
                                        exit={true}
                                      >
                                        <span
                                          className="MuiTouchRipple-root-276"
                                        />
                                      </TransitionGroup>
                                    </TouchRipple>
                                  </WithStyles(TouchRipple)>
                                </NoSsr>
                              </a>
                            </Link>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </Button>
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      className="MyForm-button-2 MyForm-danger-4"
                      onClick={[Function]}
                      variant="contained"
                    >
                      <Button
                        className="MyForm-button-2 MyForm-danger-4"
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit-256",
                            "contained": "MuiButton-contained-246",
                            "containedPrimary": "MuiButton-containedPrimary-247",
                            "containedSecondary": "MuiButton-containedSecondary-248",
                            "disabled": "MuiButton-disabled-255",
                            "extendedFab": "MuiButton-extendedFab-253",
                            "fab": "MuiButton-fab-252",
                            "flat": "MuiButton-flat-240",
                            "flatPrimary": "MuiButton-flatPrimary-241",
                            "flatSecondary": "MuiButton-flatSecondary-242",
                            "focusVisible": "MuiButton-focusVisible-254",
                            "fullWidth": "MuiButton-fullWidth-260",
                            "label": "MuiButton-label-236",
                            "mini": "MuiButton-mini-257",
                            "outlined": "MuiButton-outlined-243",
                            "outlinedPrimary": "MuiButton-outlinedPrimary-244",
                            "outlinedSecondary": "MuiButton-outlinedSecondary-245",
                            "raised": "MuiButton-raised-249",
                            "raisedPrimary": "MuiButton-raisedPrimary-250",
                            "raisedSecondary": "MuiButton-raisedSecondary-251",
                            "root": "MuiButton-root-235",
                            "sizeLarge": "MuiButton-sizeLarge-259",
                            "sizeSmall": "MuiButton-sizeSmall-258",
                            "text": "MuiButton-text-237",
                            "textPrimary": "MuiButton-textPrimary-238",
                            "textSecondary": "MuiButton-textSecondary-239",
                          }
                        }
                        color="default"
                        component="button"
                        disableFocusRipple={false}
                        disabled={false}
                        fullWidth={false}
                        mini={false}
                        onClick={[Function]}
                        size="medium"
                        type="button"
                        variant="contained"
                      >
                        <WithStyles(ButtonBase)
                          className="MuiButton-root-235 MuiButton-contained-246 MuiButton-raised-249 MyForm-button-2 MyForm-danger-4"
                          component="button"
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="MuiButton-focusVisible-254"
                          onClick={[Function]}
                          type="button"
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiButton-root-235 MuiButton-contained-246 MuiButton-raised-249 MyForm-button-2 MyForm-danger-4"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-224",
                                "focusVisible": "MuiButtonBase-focusVisible-225",
                                "root": "MuiButtonBase-root-223",
                              }
                            }
                            component="button"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="MuiButton-focusVisible-254"
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <button
                              className="MuiButtonBase-root-223 MuiButton-root-235 MuiButton-contained-246 MuiButton-raised-249 MyForm-button-2 MyForm-danger-4"
                              disabled={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onContextMenu={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex="0"
                              type="button"
                            >
                              <span
                                className="MuiButton-label-236"
                              >
                                Delete
                              </span>
                              <NoSsr
                                defer={false}
                                fallback={null}
                              >
                                <WithStyles(TouchRipple)
                                  center={false}
                                  innerRef={[Function]}
                                >
                                  <TouchRipple
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child-280",
                                        "childLeaving": "MuiTouchRipple-childLeaving-281",
                                        "childPulsate": "MuiTouchRipple-childPulsate-282",
                                        "ripple": "MuiTouchRipple-ripple-277",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate-279",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible-278",
                                        "root": "MuiTouchRipple-root-276",
                                      }
                                    }
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      className="MuiTouchRipple-root-276"
                                      component="span"
                                      enter={true}
                                      exit={true}
                                    >
                                      <span
                                        className="MuiTouchRipple-root-276"
                                      />
                                    </TransitionGroup>
                                  </TouchRipple>
                                </WithStyles(TouchRipple)>
                              </NoSsr>
                            </button>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </Button>
                    </WithStyles(Button)>
                  </div>
                </form>
              </MyForm>
            </WithStyles(MyForm)>
          </Formik>
        </WithFormik(WithStyles(MyForm))>
      </AddOrEditRecipeWrapper>
    </Router>
  </MemoryRouter>
</MuiThemeProviderOld>
`;
